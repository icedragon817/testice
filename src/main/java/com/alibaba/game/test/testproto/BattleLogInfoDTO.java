package com.alibaba.game.test.testproto;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/java/com/protobuf/proto/BattleLogMsg.proto

public final class BattleLogInfoDTO {
  private BattleLogInfoDTO() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code BattleLogType}
   */
  public enum BattleLogType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>None = 0;</code>
     */
    None(0),
    /**
     * <pre>
     *局内战斗获得经验、装备
     * </pre>
     *
     * <code>GetItem = 1;</code>
     */
    GetItem(1),
    /**
     * <pre>
     *局内战斗属性面板切片
     * </pre>
     *
     * <code>AttrChange = 2;</code>
     */
    AttrChange(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>None = 0;</code>
     */
    public static final int None_VALUE = 0;
    /**
     * <pre>
     *局内战斗获得经验、装备
     * </pre>
     *
     * <code>GetItem = 1;</code>
     */
    public static final int GetItem_VALUE = 1;
    /**
     * <pre>
     *局内战斗属性面板切片
     * </pre>
     *
     * <code>AttrChange = 2;</code>
     */
    public static final int AttrChange_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static BattleLogType valueOf(int value) {
      return forNumber(value);
    }

    public static BattleLogType forNumber(int value) {
      switch (value) {
        case 0: return None;
        case 1: return GetItem;
        case 2: return AttrChange;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BattleLogType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BattleLogType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BattleLogType>() {
            public BattleLogType findValueByNumber(int number) {
              return BattleLogType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return BattleLogInfoDTO.getDescriptor().getEnumTypes().get(0);
    }

    private static final BattleLogType[] VALUES = values();

    public static BattleLogType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BattleLogType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:BattleLogType)
  }

  public interface BattleLogBaseInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BattleLogBaseInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.BattleLogType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.BattleLogType type = 1;</code>
     */
    BattleLogInfoDTO.BattleLogType getType();

    /**
     * <pre>
     *战斗数据自增ID，从1开始，每生成一条ID+1
     * </pre>
     *
     * <code>int32 LogId = 2;</code>
     */
    int getLogId();

    /**
     * <pre>
     *标记log类型
     * </pre>
     *
     * <code>int32 TypeCode = 3;</code>
     */
    int getTypeCode();

    /**
     * <pre>
     *帧id
     * </pre>
     *
     * <code>int32 FrameId = 4;</code>
     */
    int getFrameId();

    /**
     * <pre>
     *获益者英雄id
     * </pre>
     *
     * <code>int32 OwnerId = 5;</code>
     */
    int getOwnerId();

    /**
     * <pre>
     *获益者阵营
     * </pre>
     *
     * <code>bool OwnerRace = 6;</code>
     */
    boolean getOwnerRace();

    /**
     * <pre>
     *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
     * </pre>
     *
     * <code>.google.protobuf.Any object = 7;</code>
     */
    boolean hasObject();
    /**
     * <pre>
     *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
     * </pre>
     *
     * <code>.google.protobuf.Any object = 7;</code>
     */
    com.google.protobuf.Any getObject();
    /**
     * <pre>
     *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
     * </pre>
     *
     * <code>.google.protobuf.Any object = 7;</code>
     */
    com.google.protobuf.AnyOrBuilder getObjectOrBuilder();
  }
  /**
   * <pre>
   *公共字段部分，采用类似继承的结构处理，对每条log来说，该字段取值不一定相同
   * </pre>
   *
   * Protobuf type {@code BattleLogBaseInfo}
   */
  public  static final class BattleLogBaseInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BattleLogBaseInfo)
      BattleLogBaseInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BattleLogBaseInfo.newBuilder() to construct.
    private BattleLogBaseInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BattleLogBaseInfo() {
      type_ = 0;
      logId_ = 0;
      typeCode_ = 0;
      frameId_ = 0;
      ownerId_ = 0;
      ownerRace_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BattleLogBaseInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              logId_ = input.readInt32();
              break;
            }
            case 24: {

              typeCode_ = input.readInt32();
              break;
            }
            case 32: {

              frameId_ = input.readInt32();
              break;
            }
            case 40: {

              ownerId_ = input.readInt32();
              break;
            }
            case 48: {

              ownerRace_ = input.readBool();
              break;
            }
            case 58: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (object_ != null) {
                subBuilder = object_.toBuilder();
              }
              object_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(object_);
                object_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BattleLogInfoDTO.internal_static_BattleLogBaseInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BattleLogInfoDTO.internal_static_BattleLogBaseInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BattleLogInfoDTO.BattleLogBaseInfo.class, BattleLogInfoDTO.BattleLogBaseInfo.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.BattleLogType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.BattleLogType type = 1;</code>
     */
    public BattleLogInfoDTO.BattleLogType getType() {
      BattleLogInfoDTO.BattleLogType result = BattleLogInfoDTO.BattleLogType.valueOf(type_);
      return result == null ? BattleLogInfoDTO.BattleLogType.UNRECOGNIZED : result;
    }

    public static final int LOGID_FIELD_NUMBER = 2;
    private int logId_;
    /**
     * <pre>
     *战斗数据自增ID，从1开始，每生成一条ID+1
     * </pre>
     *
     * <code>int32 LogId = 2;</code>
     */
    public int getLogId() {
      return logId_;
    }

    public static final int TYPECODE_FIELD_NUMBER = 3;
    private int typeCode_;
    /**
     * <pre>
     *标记log类型
     * </pre>
     *
     * <code>int32 TypeCode = 3;</code>
     */
    public int getTypeCode() {
      return typeCode_;
    }

    public static final int FRAMEID_FIELD_NUMBER = 4;
    private int frameId_;
    /**
     * <pre>
     *帧id
     * </pre>
     *
     * <code>int32 FrameId = 4;</code>
     */
    public int getFrameId() {
      return frameId_;
    }

    public static final int OWNERID_FIELD_NUMBER = 5;
    private int ownerId_;
    /**
     * <pre>
     *获益者英雄id
     * </pre>
     *
     * <code>int32 OwnerId = 5;</code>
     */
    public int getOwnerId() {
      return ownerId_;
    }

    public static final int OWNERRACE_FIELD_NUMBER = 6;
    private boolean ownerRace_;
    /**
     * <pre>
     *获益者阵营
     * </pre>
     *
     * <code>bool OwnerRace = 6;</code>
     */
    public boolean getOwnerRace() {
      return ownerRace_;
    }

    public static final int OBJECT_FIELD_NUMBER = 7;
    private com.google.protobuf.Any object_;
    /**
     * <pre>
     *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
     * </pre>
     *
     * <code>.google.protobuf.Any object = 7;</code>
     */
    public boolean hasObject() {
      return object_ != null;
    }
    /**
     * <pre>
     *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
     * </pre>
     *
     * <code>.google.protobuf.Any object = 7;</code>
     */
    public com.google.protobuf.Any getObject() {
      return object_ == null ? com.google.protobuf.Any.getDefaultInstance() : object_;
    }
    /**
     * <pre>
     *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
     * </pre>
     *
     * <code>.google.protobuf.Any object = 7;</code>
     */
    public com.google.protobuf.AnyOrBuilder getObjectOrBuilder() {
      return getObject();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != BattleLogInfoDTO.BattleLogType.None.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (logId_ != 0) {
        output.writeInt32(2, logId_);
      }
      if (typeCode_ != 0) {
        output.writeInt32(3, typeCode_);
      }
      if (frameId_ != 0) {
        output.writeInt32(4, frameId_);
      }
      if (ownerId_ != 0) {
        output.writeInt32(5, ownerId_);
      }
      if (ownerRace_ != false) {
        output.writeBool(6, ownerRace_);
      }
      if (object_ != null) {
        output.writeMessage(7, getObject());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != BattleLogInfoDTO.BattleLogType.None.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (logId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, logId_);
      }
      if (typeCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, typeCode_);
      }
      if (frameId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, frameId_);
      }
      if (ownerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ownerId_);
      }
      if (ownerRace_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, ownerRace_);
      }
      if (object_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getObject());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BattleLogInfoDTO.BattleLogBaseInfo)) {
        return super.equals(obj);
      }
      BattleLogInfoDTO.BattleLogBaseInfo other = (BattleLogInfoDTO.BattleLogBaseInfo) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (getLogId()
          == other.getLogId());
      result = result && (getTypeCode()
          == other.getTypeCode());
      result = result && (getFrameId()
          == other.getFrameId());
      result = result && (getOwnerId()
          == other.getOwnerId());
      result = result && (getOwnerRace()
          == other.getOwnerRace());
      result = result && (hasObject() == other.hasObject());
      if (hasObject()) {
        result = result && getObject()
            .equals(other.getObject());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + LOGID_FIELD_NUMBER;
      hash = (53 * hash) + getLogId();
      hash = (37 * hash) + TYPECODE_FIELD_NUMBER;
      hash = (53 * hash) + getTypeCode();
      hash = (37 * hash) + FRAMEID_FIELD_NUMBER;
      hash = (53 * hash) + getFrameId();
      hash = (37 * hash) + OWNERID_FIELD_NUMBER;
      hash = (53 * hash) + getOwnerId();
      hash = (37 * hash) + OWNERRACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOwnerRace());
      if (hasObject()) {
        hash = (37 * hash) + OBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getObject().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogBaseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BattleLogInfoDTO.BattleLogBaseInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *公共字段部分，采用类似继承的结构处理，对每条log来说，该字段取值不一定相同
     * </pre>
     *
     * Protobuf type {@code BattleLogBaseInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BattleLogBaseInfo)
        BattleLogInfoDTO.BattleLogBaseInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BattleLogInfoDTO.internal_static_BattleLogBaseInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BattleLogInfoDTO.internal_static_BattleLogBaseInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BattleLogInfoDTO.BattleLogBaseInfo.class, BattleLogInfoDTO.BattleLogBaseInfo.Builder.class);
      }

      // Construct using BattleLogInfoDTO.BattleLogBaseInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        logId_ = 0;

        typeCode_ = 0;

        frameId_ = 0;

        ownerId_ = 0;

        ownerRace_ = false;

        if (objectBuilder_ == null) {
          object_ = null;
        } else {
          object_ = null;
          objectBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BattleLogInfoDTO.internal_static_BattleLogBaseInfo_descriptor;
      }

      public BattleLogInfoDTO.BattleLogBaseInfo getDefaultInstanceForType() {
        return BattleLogInfoDTO.BattleLogBaseInfo.getDefaultInstance();
      }

      public BattleLogInfoDTO.BattleLogBaseInfo build() {
        BattleLogInfoDTO.BattleLogBaseInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public BattleLogInfoDTO.BattleLogBaseInfo buildPartial() {
        BattleLogInfoDTO.BattleLogBaseInfo result = new BattleLogInfoDTO.BattleLogBaseInfo(this);
        result.type_ = type_;
        result.logId_ = logId_;
        result.typeCode_ = typeCode_;
        result.frameId_ = frameId_;
        result.ownerId_ = ownerId_;
        result.ownerRace_ = ownerRace_;
        if (objectBuilder_ == null) {
          result.object_ = object_;
        } else {
          result.object_ = objectBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BattleLogInfoDTO.BattleLogBaseInfo) {
          return mergeFrom((BattleLogInfoDTO.BattleLogBaseInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BattleLogInfoDTO.BattleLogBaseInfo other) {
        if (other == BattleLogInfoDTO.BattleLogBaseInfo.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getLogId() != 0) {
          setLogId(other.getLogId());
        }
        if (other.getTypeCode() != 0) {
          setTypeCode(other.getTypeCode());
        }
        if (other.getFrameId() != 0) {
          setFrameId(other.getFrameId());
        }
        if (other.getOwnerId() != 0) {
          setOwnerId(other.getOwnerId());
        }
        if (other.getOwnerRace() != false) {
          setOwnerRace(other.getOwnerRace());
        }
        if (other.hasObject()) {
          mergeObject(other.getObject());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BattleLogInfoDTO.BattleLogBaseInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BattleLogInfoDTO.BattleLogBaseInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.BattleLogType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.BattleLogType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.BattleLogType type = 1;</code>
       */
      public BattleLogInfoDTO.BattleLogType getType() {
        BattleLogInfoDTO.BattleLogType result = BattleLogInfoDTO.BattleLogType.valueOf(type_);
        return result == null ? BattleLogInfoDTO.BattleLogType.UNRECOGNIZED : result;
      }
      /**
       * <code>.BattleLogType type = 1;</code>
       */
      public Builder setType(BattleLogInfoDTO.BattleLogType value) {
        if (value == null) {
          throw new NullPointerException();
        }

        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.BattleLogType type = 1;</code>
       */
      public Builder clearType() {

        type_ = 0;
        onChanged();
        return this;
      }

      private int logId_ ;
      /**
       * <pre>
       *战斗数据自增ID，从1开始，每生成一条ID+1
       * </pre>
       *
       * <code>int32 LogId = 2;</code>
       */
      public int getLogId() {
        return logId_;
      }
      /**
       * <pre>
       *战斗数据自增ID，从1开始，每生成一条ID+1
       * </pre>
       *
       * <code>int32 LogId = 2;</code>
       */
      public Builder setLogId(int value) {

        logId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗数据自增ID，从1开始，每生成一条ID+1
       * </pre>
       *
       * <code>int32 LogId = 2;</code>
       */
      public Builder clearLogId() {

        logId_ = 0;
        onChanged();
        return this;
      }

      private int typeCode_ ;
      /**
       * <pre>
       *标记log类型
       * </pre>
       *
       * <code>int32 TypeCode = 3;</code>
       */
      public int getTypeCode() {
        return typeCode_;
      }
      /**
       * <pre>
       *标记log类型
       * </pre>
       *
       * <code>int32 TypeCode = 3;</code>
       */
      public Builder setTypeCode(int value) {

        typeCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *标记log类型
       * </pre>
       *
       * <code>int32 TypeCode = 3;</code>
       */
      public Builder clearTypeCode() {

        typeCode_ = 0;
        onChanged();
        return this;
      }

      private int frameId_ ;
      /**
       * <pre>
       *帧id
       * </pre>
       *
       * <code>int32 FrameId = 4;</code>
       */
      public int getFrameId() {
        return frameId_;
      }
      /**
       * <pre>
       *帧id
       * </pre>
       *
       * <code>int32 FrameId = 4;</code>
       */
      public Builder setFrameId(int value) {

        frameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧id
       * </pre>
       *
       * <code>int32 FrameId = 4;</code>
       */
      public Builder clearFrameId() {

        frameId_ = 0;
        onChanged();
        return this;
      }

      private int ownerId_ ;
      /**
       * <pre>
       *获益者英雄id
       * </pre>
       *
       * <code>int32 OwnerId = 5;</code>
       */
      public int getOwnerId() {
        return ownerId_;
      }
      /**
       * <pre>
       *获益者英雄id
       * </pre>
       *
       * <code>int32 OwnerId = 5;</code>
       */
      public Builder setOwnerId(int value) {

        ownerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *获益者英雄id
       * </pre>
       *
       * <code>int32 OwnerId = 5;</code>
       */
      public Builder clearOwnerId() {

        ownerId_ = 0;
        onChanged();
        return this;
      }

      private boolean ownerRace_ ;
      /**
       * <pre>
       *获益者阵营
       * </pre>
       *
       * <code>bool OwnerRace = 6;</code>
       */
      public boolean getOwnerRace() {
        return ownerRace_;
      }
      /**
       * <pre>
       *获益者阵营
       * </pre>
       *
       * <code>bool OwnerRace = 6;</code>
       */
      public Builder setOwnerRace(boolean value) {

        ownerRace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *获益者阵营
       * </pre>
       *
       * <code>bool OwnerRace = 6;</code>
       */
      public Builder clearOwnerRace() {

        ownerRace_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any object_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> objectBuilder_;
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public boolean hasObject() {
        return objectBuilder_ != null || object_ != null;
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public com.google.protobuf.Any getObject() {
        if (objectBuilder_ == null) {
          return object_ == null ? com.google.protobuf.Any.getDefaultInstance() : object_;
        } else {
          return objectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public Builder setObject(com.google.protobuf.Any value) {
        if (objectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          object_ = value;
          onChanged();
        } else {
          objectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public Builder setObject(
          com.google.protobuf.Any.Builder builderForValue) {
        if (objectBuilder_ == null) {
          object_ = builderForValue.build();
          onChanged();
        } else {
          objectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public Builder mergeObject(com.google.protobuf.Any value) {
        if (objectBuilder_ == null) {
          if (object_ != null) {
            object_ =
              com.google.protobuf.Any.newBuilder(object_).mergeFrom(value).buildPartial();
          } else {
            object_ = value;
          }
          onChanged();
        } else {
          objectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public Builder clearObject() {
        if (objectBuilder_ == null) {
          object_ = null;
          onChanged();
        } else {
          object_ = null;
          objectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public com.google.protobuf.Any.Builder getObjectBuilder() {

        onChanged();
        return getObjectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      public com.google.protobuf.AnyOrBuilder getObjectOrBuilder() {
        if (objectBuilder_ != null) {
          return objectBuilder_.getMessageOrBuilder();
        } else {
          return object_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : object_;
        }
      }
      /**
       * <pre>
       *BattleLogGetItemInfo 或  BattleLogAttrChangeInfo
       * </pre>
       *
       * <code>.google.protobuf.Any object = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>
          getObjectFieldBuilder() {
        if (objectBuilder_ == null) {
          objectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getObject(),
                  getParentForChildren(),
                  isClean());
          object_ = null;
        }
        return objectBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BattleLogBaseInfo)
    }

    // @@protoc_insertion_point(class_scope:BattleLogBaseInfo)
    private static final BattleLogInfoDTO.BattleLogBaseInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BattleLogInfoDTO.BattleLogBaseInfo();
    }

    public static BattleLogInfoDTO.BattleLogBaseInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BattleLogBaseInfo>
        PARSER = new com.google.protobuf.AbstractParser<BattleLogBaseInfo>() {
      public BattleLogBaseInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BattleLogBaseInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BattleLogBaseInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BattleLogBaseInfo> getParserForType() {
      return PARSER;
    }

    public BattleLogInfoDTO.BattleLogBaseInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BattleLogGetItemInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BattleLogGetItemInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *死亡单位英雄id
     * </pre>
     *
     * <code>int32 DeadId = 1;</code>
     */
    int getDeadId();

    /**
     * <pre>
     *死亡单位阵营
     * </pre>
     *
     * <code>bool DeadRace = 2;</code>
     */
    boolean getDeadRace();

    /**
     * <pre>
     *获得道具的值，经验则为经验数值，装备为装备的id
     * </pre>
     *
     * <code>int32 ItemValue = 3;</code>
     */
    int getItemValue();
  }
  /**
   * <pre>
   *获得经验装备
   * </pre>
   *
   * Protobuf type {@code BattleLogGetItemInfo}
   */
  public  static final class BattleLogGetItemInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BattleLogGetItemInfo)
      BattleLogGetItemInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BattleLogGetItemInfo.newBuilder() to construct.
    private BattleLogGetItemInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BattleLogGetItemInfo() {
      deadId_ = 0;
      deadRace_ = false;
      itemValue_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BattleLogGetItemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              deadId_ = input.readInt32();
              break;
            }
            case 16: {

              deadRace_ = input.readBool();
              break;
            }
            case 24: {

              itemValue_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BattleLogInfoDTO.internal_static_BattleLogGetItemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BattleLogInfoDTO.internal_static_BattleLogGetItemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BattleLogInfoDTO.BattleLogGetItemInfo.class, BattleLogInfoDTO.BattleLogGetItemInfo.Builder.class);
    }

    public static final int DEADID_FIELD_NUMBER = 1;
    private int deadId_;
    /**
     * <pre>
     *死亡单位英雄id
     * </pre>
     *
     * <code>int32 DeadId = 1;</code>
     */
    public int getDeadId() {
      return deadId_;
    }

    public static final int DEADRACE_FIELD_NUMBER = 2;
    private boolean deadRace_;
    /**
     * <pre>
     *死亡单位阵营
     * </pre>
     *
     * <code>bool DeadRace = 2;</code>
     */
    public boolean getDeadRace() {
      return deadRace_;
    }

    public static final int ITEMVALUE_FIELD_NUMBER = 3;
    private int itemValue_;
    /**
     * <pre>
     *获得道具的值，经验则为经验数值，装备为装备的id
     * </pre>
     *
     * <code>int32 ItemValue = 3;</code>
     */
    public int getItemValue() {
      return itemValue_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (deadId_ != 0) {
        output.writeInt32(1, deadId_);
      }
      if (deadRace_ != false) {
        output.writeBool(2, deadRace_);
      }
      if (itemValue_ != 0) {
        output.writeInt32(3, itemValue_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (deadId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deadId_);
      }
      if (deadRace_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, deadRace_);
      }
      if (itemValue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemValue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BattleLogInfoDTO.BattleLogGetItemInfo)) {
        return super.equals(obj);
      }
      BattleLogInfoDTO.BattleLogGetItemInfo other = (BattleLogInfoDTO.BattleLogGetItemInfo) obj;

      boolean result = true;
      result = result && (getDeadId()
          == other.getDeadId());
      result = result && (getDeadRace()
          == other.getDeadRace());
      result = result && (getItemValue()
          == other.getItemValue());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEADID_FIELD_NUMBER;
      hash = (53 * hash) + getDeadId();
      hash = (37 * hash) + DEADRACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDeadRace());
      hash = (37 * hash) + ITEMVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getItemValue();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogGetItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BattleLogInfoDTO.BattleLogGetItemInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *获得经验装备
     * </pre>
     *
     * Protobuf type {@code BattleLogGetItemInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BattleLogGetItemInfo)
        BattleLogInfoDTO.BattleLogGetItemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BattleLogInfoDTO.internal_static_BattleLogGetItemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BattleLogInfoDTO.internal_static_BattleLogGetItemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BattleLogInfoDTO.BattleLogGetItemInfo.class, BattleLogInfoDTO.BattleLogGetItemInfo.Builder.class);
      }

      // Construct using BattleLogInfoDTO.BattleLogGetItemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        deadId_ = 0;

        deadRace_ = false;

        itemValue_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BattleLogInfoDTO.internal_static_BattleLogGetItemInfo_descriptor;
      }

      public BattleLogInfoDTO.BattleLogGetItemInfo getDefaultInstanceForType() {
        return BattleLogInfoDTO.BattleLogGetItemInfo.getDefaultInstance();
      }

      public BattleLogInfoDTO.BattleLogGetItemInfo build() {
        BattleLogInfoDTO.BattleLogGetItemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public BattleLogInfoDTO.BattleLogGetItemInfo buildPartial() {
        BattleLogInfoDTO.BattleLogGetItemInfo result = new BattleLogInfoDTO.BattleLogGetItemInfo(this);
        result.deadId_ = deadId_;
        result.deadRace_ = deadRace_;
        result.itemValue_ = itemValue_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BattleLogInfoDTO.BattleLogGetItemInfo) {
          return mergeFrom((BattleLogInfoDTO.BattleLogGetItemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BattleLogInfoDTO.BattleLogGetItemInfo other) {
        if (other == BattleLogInfoDTO.BattleLogGetItemInfo.getDefaultInstance()) return this;
        if (other.getDeadId() != 0) {
          setDeadId(other.getDeadId());
        }
        if (other.getDeadRace() != false) {
          setDeadRace(other.getDeadRace());
        }
        if (other.getItemValue() != 0) {
          setItemValue(other.getItemValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BattleLogInfoDTO.BattleLogGetItemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BattleLogInfoDTO.BattleLogGetItemInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int deadId_ ;
      /**
       * <pre>
       *死亡单位英雄id
       * </pre>
       *
       * <code>int32 DeadId = 1;</code>
       */
      public int getDeadId() {
        return deadId_;
      }
      /**
       * <pre>
       *死亡单位英雄id
       * </pre>
       *
       * <code>int32 DeadId = 1;</code>
       */
      public Builder setDeadId(int value) {

        deadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *死亡单位英雄id
       * </pre>
       *
       * <code>int32 DeadId = 1;</code>
       */
      public Builder clearDeadId() {

        deadId_ = 0;
        onChanged();
        return this;
      }

      private boolean deadRace_ ;
      /**
       * <pre>
       *死亡单位阵营
       * </pre>
       *
       * <code>bool DeadRace = 2;</code>
       */
      public boolean getDeadRace() {
        return deadRace_;
      }
      /**
       * <pre>
       *死亡单位阵营
       * </pre>
       *
       * <code>bool DeadRace = 2;</code>
       */
      public Builder setDeadRace(boolean value) {

        deadRace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *死亡单位阵营
       * </pre>
       *
       * <code>bool DeadRace = 2;</code>
       */
      public Builder clearDeadRace() {

        deadRace_ = false;
        onChanged();
        return this;
      }

      private int itemValue_ ;
      /**
       * <pre>
       *获得道具的值，经验则为经验数值，装备为装备的id
       * </pre>
       *
       * <code>int32 ItemValue = 3;</code>
       */
      public int getItemValue() {
        return itemValue_;
      }
      /**
       * <pre>
       *获得道具的值，经验则为经验数值，装备为装备的id
       * </pre>
       *
       * <code>int32 ItemValue = 3;</code>
       */
      public Builder setItemValue(int value) {

        itemValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *获得道具的值，经验则为经验数值，装备为装备的id
       * </pre>
       *
       * <code>int32 ItemValue = 3;</code>
       */
      public Builder clearItemValue() {

        itemValue_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BattleLogGetItemInfo)
    }

    // @@protoc_insertion_point(class_scope:BattleLogGetItemInfo)
    private static final BattleLogInfoDTO.BattleLogGetItemInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BattleLogInfoDTO.BattleLogGetItemInfo();
    }

    public static BattleLogInfoDTO.BattleLogGetItemInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BattleLogGetItemInfo>
        PARSER = new com.google.protobuf.AbstractParser<BattleLogGetItemInfo>() {
      public BattleLogGetItemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BattleLogGetItemInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BattleLogGetItemInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BattleLogGetItemInfo> getParserForType() {
      return PARSER;
    }

    public BattleLogInfoDTO.BattleLogGetItemInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BattleLogAttrChangeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BattleLogAttrChangeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsId = 1;</code>
     */
    java.util.List<Integer> getPartsIdList();
    /**
     * <pre>
     *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsId = 1;</code>
     */
    int getPartsIdCount();
    /**
     * <pre>
     *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsId = 1;</code>
     */
    int getPartsId(int index);

    /**
     * <pre>
     *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsLevel = 2;</code>
     */
    java.util.List<Integer> getPartsLevelList();
    /**
     * <pre>
     *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsLevel = 2;</code>
     */
    int getPartsLevelCount();
    /**
     * <pre>
     *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsLevel = 2;</code>
     */
    int getPartsLevel(int index);

    /**
     * <pre>
     *神器id
     * </pre>
     *
     * <code>int32 GodId = 3;</code>
     */
    int getGodId();

    /**
     * <pre>
     *选择的天赋id数组，按顺序为第一天赋、第二天赋
     * </pre>
     *
     * <code>repeated int32 AdvancesId = 4;</code>
     */
    java.util.List<Integer> getAdvancesIdList();
    /**
     * <pre>
     *选择的天赋id数组，按顺序为第一天赋、第二天赋
     * </pre>
     *
     * <code>repeated int32 AdvancesId = 4;</code>
     */
    int getAdvancesIdCount();
    /**
     * <pre>
     *选择的天赋id数组，按顺序为第一天赋、第二天赋
     * </pre>
     *
     * <code>repeated int32 AdvancesId = 4;</code>
     */
    int getAdvancesId(int index);

    /**
     * <pre>
     *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
     * </pre>
     *
     * <code>repeated int32 SkillsLevel = 5;</code>
     */
    java.util.List<Integer> getSkillsLevelList();
    /**
     * <pre>
     *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
     * </pre>
     *
     * <code>repeated int32 SkillsLevel = 5;</code>
     */
    int getSkillsLevelCount();
    /**
     * <pre>
     *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
     * </pre>
     *
     * <code>repeated int32 SkillsLevel = 5;</code>
     */
    int getSkillsLevel(int index);

    /**
     * <pre>
     *英雄等级
     * </pre>
     *
     * <code>int32 Level = 6;</code>
     */
    int getLevel();

    /**
     * <pre>
     *暴击率
     * </pre>
     *
     * <code>float CriticalStrike = 7;</code>
     */
    float getCriticalStrike();

    /**
     * <pre>
     *爆伤系数
     * </pre>
     *
     * <code>float CriticalStrikeEff = 8;</code>
     */
    float getCriticalStrikeEff();

    /**
     * <pre>
     *最大生命
     * </pre>
     *
     * <code>int32 HpMax = 9;</code>
     */
    int getHpMax();

    /**
     * <pre>
     *每5s回血
     * </pre>
     *
     * <code>int32 RegenHp = 10;</code>
     */
    int getRegenHp();

    /**
     * <pre>
     *基础攻击力
     * </pre>
     *
     * <code>int32 PhyAttack = 11;</code>
     */
    int getPhyAttack();

    /**
     * <pre>
     *抗性
     * </pre>
     *
     * <code>int32 PhyDef = 12;</code>
     */
    int getPhyDef();

    /**
     * <pre>
     *攻速加成
     * </pre>
     *
     * <code>float AttackSpeed = 13;</code>
     */
    float getAttackSpeed();

    /**
     * <pre>
     *基础移动速度
     * </pre>
     *
     * <code>int32 MoveSpeed = 14;</code>
     */
    int getMoveSpeed();

    /**
     * <pre>
     *普攻吸血
     * </pre>
     *
     * <code>float PhyStealHp = 15;</code>
     */
    float getPhyStealHp();

    /**
     * <pre>
     *冷却缩减
     * </pre>
     *
     * <code>float CdAddrat = 16;</code>
     */
    float getCdAddrat();

    /**
     * <pre>
     *穿透
     * </pre>
     *
     * <code>int32 PhyPenetrate = 17;</code>
     */
    int getPhyPenetrate();

    /**
     * <pre>
     *韧性
     * </pre>
     *
     * <code>float TenacityRat = 18;</code>
     */
    float getTenacityRat();

    /**
     * <pre>
     *法力
     * </pre>
     *
     * <code>int32 KickPow = 19;</code>
     */
    int getKickPow();

    /**
     * <pre>
     *物理攻击百分比
     * </pre>
     *
     * <code>float PhyAttackCoe = 20;</code>
     */
    float getPhyAttackCoe();

    /**
     * <pre>
     *移动速度百分比
     * </pre>
     *
     * <code>float MoveSpeedCoe = 21;</code>
     */
    float getMoveSpeedCoe();

    /**
     * <pre>
     *物理防御百分比
     * </pre>
     *
     * <code>float PhyDefCoe = 22;</code>
     */
    float getPhyDefCoe();
  }
  /**
   * <pre>
   *属性变化
   * </pre>
   *
   * Protobuf type {@code BattleLogAttrChangeInfo}
   */
  public  static final class BattleLogAttrChangeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BattleLogAttrChangeInfo)
      BattleLogAttrChangeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BattleLogAttrChangeInfo.newBuilder() to construct.
    private BattleLogAttrChangeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BattleLogAttrChangeInfo() {
      partsId_ = java.util.Collections.emptyList();
      partsLevel_ = java.util.Collections.emptyList();
      godId_ = 0;
      advancesId_ = java.util.Collections.emptyList();
      skillsLevel_ = java.util.Collections.emptyList();
      level_ = 0;
      criticalStrike_ = 0F;
      criticalStrikeEff_ = 0F;
      hpMax_ = 0;
      regenHp_ = 0;
      phyAttack_ = 0;
      phyDef_ = 0;
      attackSpeed_ = 0F;
      moveSpeed_ = 0;
      phyStealHp_ = 0F;
      cdAddrat_ = 0F;
      phyPenetrate_ = 0;
      tenacityRat_ = 0F;
      kickPow_ = 0;
      phyAttackCoe_ = 0F;
      moveSpeedCoe_ = 0F;
      phyDefCoe_ = 0F;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BattleLogAttrChangeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                partsId_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              partsId_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                partsId_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                partsId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                partsLevel_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              partsLevel_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                partsLevel_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                partsLevel_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              godId_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                advancesId_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              advancesId_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                advancesId_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                advancesId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                skillsLevel_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              skillsLevel_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                skillsLevel_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                skillsLevel_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {

              level_ = input.readInt32();
              break;
            }
            case 61: {

              criticalStrike_ = input.readFloat();
              break;
            }
            case 69: {

              criticalStrikeEff_ = input.readFloat();
              break;
            }
            case 72: {

              hpMax_ = input.readInt32();
              break;
            }
            case 80: {

              regenHp_ = input.readInt32();
              break;
            }
            case 88: {

              phyAttack_ = input.readInt32();
              break;
            }
            case 96: {

              phyDef_ = input.readInt32();
              break;
            }
            case 109: {

              attackSpeed_ = input.readFloat();
              break;
            }
            case 112: {

              moveSpeed_ = input.readInt32();
              break;
            }
            case 125: {

              phyStealHp_ = input.readFloat();
              break;
            }
            case 133: {

              cdAddrat_ = input.readFloat();
              break;
            }
            case 136: {

              phyPenetrate_ = input.readInt32();
              break;
            }
            case 149: {

              tenacityRat_ = input.readFloat();
              break;
            }
            case 152: {

              kickPow_ = input.readInt32();
              break;
            }
            case 165: {

              phyAttackCoe_ = input.readFloat();
              break;
            }
            case 173: {

              moveSpeedCoe_ = input.readFloat();
              break;
            }
            case 181: {

              phyDefCoe_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          partsId_ = java.util.Collections.unmodifiableList(partsId_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          partsLevel_ = java.util.Collections.unmodifiableList(partsLevel_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          advancesId_ = java.util.Collections.unmodifiableList(advancesId_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          skillsLevel_ = java.util.Collections.unmodifiableList(skillsLevel_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BattleLogInfoDTO.internal_static_BattleLogAttrChangeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BattleLogInfoDTO.internal_static_BattleLogAttrChangeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BattleLogInfoDTO.BattleLogAttrChangeInfo.class, BattleLogInfoDTO.BattleLogAttrChangeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int PARTSID_FIELD_NUMBER = 1;
    private java.util.List<Integer> partsId_;
    /**
     * <pre>
     *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsId = 1;</code>
     */
    public java.util.List<Integer>
        getPartsIdList() {
      return partsId_;
    }
    /**
     * <pre>
     *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsId = 1;</code>
     */
    public int getPartsIdCount() {
      return partsId_.size();
    }
    /**
     * <pre>
     *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsId = 1;</code>
     */
    public int getPartsId(int index) {
      return partsId_.get(index);
    }
    private int partsIdMemoizedSerializedSize = -1;

    public static final int PARTSLEVEL_FIELD_NUMBER = 2;
    private java.util.List<Integer> partsLevel_;
    /**
     * <pre>
     *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsLevel = 2;</code>
     */
    public java.util.List<Integer>
        getPartsLevelList() {
      return partsLevel_;
    }
    /**
     * <pre>
     *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsLevel = 2;</code>
     */
    public int getPartsLevelCount() {
      return partsLevel_.size();
    }
    /**
     * <pre>
     *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
     * </pre>
     *
     * <code>repeated int32 PartsLevel = 2;</code>
     */
    public int getPartsLevel(int index) {
      return partsLevel_.get(index);
    }
    private int partsLevelMemoizedSerializedSize = -1;

    public static final int GODID_FIELD_NUMBER = 3;
    private int godId_;
    /**
     * <pre>
     *神器id
     * </pre>
     *
     * <code>int32 GodId = 3;</code>
     */
    public int getGodId() {
      return godId_;
    }

    public static final int ADVANCESID_FIELD_NUMBER = 4;
    private java.util.List<Integer> advancesId_;
    /**
     * <pre>
     *选择的天赋id数组，按顺序为第一天赋、第二天赋
     * </pre>
     *
     * <code>repeated int32 AdvancesId = 4;</code>
     */
    public java.util.List<Integer>
        getAdvancesIdList() {
      return advancesId_;
    }
    /**
     * <pre>
     *选择的天赋id数组，按顺序为第一天赋、第二天赋
     * </pre>
     *
     * <code>repeated int32 AdvancesId = 4;</code>
     */
    public int getAdvancesIdCount() {
      return advancesId_.size();
    }
    /**
     * <pre>
     *选择的天赋id数组，按顺序为第一天赋、第二天赋
     * </pre>
     *
     * <code>repeated int32 AdvancesId = 4;</code>
     */
    public int getAdvancesId(int index) {
      return advancesId_.get(index);
    }
    private int advancesIdMemoizedSerializedSize = -1;

    public static final int SKILLSLEVEL_FIELD_NUMBER = 5;
    private java.util.List<Integer> skillsLevel_;
    /**
     * <pre>
     *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
     * </pre>
     *
     * <code>repeated int32 SkillsLevel = 5;</code>
     */
    public java.util.List<Integer>
        getSkillsLevelList() {
      return skillsLevel_;
    }
    /**
     * <pre>
     *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
     * </pre>
     *
     * <code>repeated int32 SkillsLevel = 5;</code>
     */
    public int getSkillsLevelCount() {
      return skillsLevel_.size();
    }
    /**
     * <pre>
     *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
     * </pre>
     *
     * <code>repeated int32 SkillsLevel = 5;</code>
     */
    public int getSkillsLevel(int index) {
      return skillsLevel_.get(index);
    }
    private int skillsLevelMemoizedSerializedSize = -1;

    public static final int LEVEL_FIELD_NUMBER = 6;
    private int level_;
    /**
     * <pre>
     *英雄等级
     * </pre>
     *
     * <code>int32 Level = 6;</code>
     */
    public int getLevel() {
      return level_;
    }

    public static final int CRITICALSTRIKE_FIELD_NUMBER = 7;
    private float criticalStrike_;
    /**
     * <pre>
     *暴击率
     * </pre>
     *
     * <code>float CriticalStrike = 7;</code>
     */
    public float getCriticalStrike() {
      return criticalStrike_;
    }

    public static final int CRITICALSTRIKEEFF_FIELD_NUMBER = 8;
    private float criticalStrikeEff_;
    /**
     * <pre>
     *爆伤系数
     * </pre>
     *
     * <code>float CriticalStrikeEff = 8;</code>
     */
    public float getCriticalStrikeEff() {
      return criticalStrikeEff_;
    }

    public static final int HPMAX_FIELD_NUMBER = 9;
    private int hpMax_;
    /**
     * <pre>
     *最大生命
     * </pre>
     *
     * <code>int32 HpMax = 9;</code>
     */
    public int getHpMax() {
      return hpMax_;
    }

    public static final int REGENHP_FIELD_NUMBER = 10;
    private int regenHp_;
    /**
     * <pre>
     *每5s回血
     * </pre>
     *
     * <code>int32 RegenHp = 10;</code>
     */
    public int getRegenHp() {
      return regenHp_;
    }

    public static final int PHYATTACK_FIELD_NUMBER = 11;
    private int phyAttack_;
    /**
     * <pre>
     *基础攻击力
     * </pre>
     *
     * <code>int32 PhyAttack = 11;</code>
     */
    public int getPhyAttack() {
      return phyAttack_;
    }

    public static final int PHYDEF_FIELD_NUMBER = 12;
    private int phyDef_;
    /**
     * <pre>
     *抗性
     * </pre>
     *
     * <code>int32 PhyDef = 12;</code>
     */
    public int getPhyDef() {
      return phyDef_;
    }

    public static final int ATTACKSPEED_FIELD_NUMBER = 13;
    private float attackSpeed_;
    /**
     * <pre>
     *攻速加成
     * </pre>
     *
     * <code>float AttackSpeed = 13;</code>
     */
    public float getAttackSpeed() {
      return attackSpeed_;
    }

    public static final int MOVESPEED_FIELD_NUMBER = 14;
    private int moveSpeed_;
    /**
     * <pre>
     *基础移动速度
     * </pre>
     *
     * <code>int32 MoveSpeed = 14;</code>
     */
    public int getMoveSpeed() {
      return moveSpeed_;
    }

    public static final int PHYSTEALHP_FIELD_NUMBER = 15;
    private float phyStealHp_;
    /**
     * <pre>
     *普攻吸血
     * </pre>
     *
     * <code>float PhyStealHp = 15;</code>
     */
    public float getPhyStealHp() {
      return phyStealHp_;
    }

    public static final int CDADDRAT_FIELD_NUMBER = 16;
    private float cdAddrat_;
    /**
     * <pre>
     *冷却缩减
     * </pre>
     *
     * <code>float CdAddrat = 16;</code>
     */
    public float getCdAddrat() {
      return cdAddrat_;
    }

    public static final int PHYPENETRATE_FIELD_NUMBER = 17;
    private int phyPenetrate_;
    /**
     * <pre>
     *穿透
     * </pre>
     *
     * <code>int32 PhyPenetrate = 17;</code>
     */
    public int getPhyPenetrate() {
      return phyPenetrate_;
    }

    public static final int TENACITYRAT_FIELD_NUMBER = 18;
    private float tenacityRat_;
    /**
     * <pre>
     *韧性
     * </pre>
     *
     * <code>float TenacityRat = 18;</code>
     */
    public float getTenacityRat() {
      return tenacityRat_;
    }

    public static final int KICKPOW_FIELD_NUMBER = 19;
    private int kickPow_;
    /**
     * <pre>
     *法力
     * </pre>
     *
     * <code>int32 KickPow = 19;</code>
     */
    public int getKickPow() {
      return kickPow_;
    }

    public static final int PHYATTACKCOE_FIELD_NUMBER = 20;
    private float phyAttackCoe_;
    /**
     * <pre>
     *物理攻击百分比
     * </pre>
     *
     * <code>float PhyAttackCoe = 20;</code>
     */
    public float getPhyAttackCoe() {
      return phyAttackCoe_;
    }

    public static final int MOVESPEEDCOE_FIELD_NUMBER = 21;
    private float moveSpeedCoe_;
    /**
     * <pre>
     *移动速度百分比
     * </pre>
     *
     * <code>float MoveSpeedCoe = 21;</code>
     */
    public float getMoveSpeedCoe() {
      return moveSpeedCoe_;
    }

    public static final int PHYDEFCOE_FIELD_NUMBER = 22;
    private float phyDefCoe_;
    /**
     * <pre>
     *物理防御百分比
     * </pre>
     *
     * <code>float PhyDefCoe = 22;</code>
     */
    public float getPhyDefCoe() {
      return phyDefCoe_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getPartsIdList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(partsIdMemoizedSerializedSize);
      }
      for (int i = 0; i < partsId_.size(); i++) {
        output.writeInt32NoTag(partsId_.get(i));
      }
      if (getPartsLevelList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(partsLevelMemoizedSerializedSize);
      }
      for (int i = 0; i < partsLevel_.size(); i++) {
        output.writeInt32NoTag(partsLevel_.get(i));
      }
      if (godId_ != 0) {
        output.writeInt32(3, godId_);
      }
      if (getAdvancesIdList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(advancesIdMemoizedSerializedSize);
      }
      for (int i = 0; i < advancesId_.size(); i++) {
        output.writeInt32NoTag(advancesId_.get(i));
      }
      if (getSkillsLevelList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(skillsLevelMemoizedSerializedSize);
      }
      for (int i = 0; i < skillsLevel_.size(); i++) {
        output.writeInt32NoTag(skillsLevel_.get(i));
      }
      if (level_ != 0) {
        output.writeInt32(6, level_);
      }
      if (criticalStrike_ != 0F) {
        output.writeFloat(7, criticalStrike_);
      }
      if (criticalStrikeEff_ != 0F) {
        output.writeFloat(8, criticalStrikeEff_);
      }
      if (hpMax_ != 0) {
        output.writeInt32(9, hpMax_);
      }
      if (regenHp_ != 0) {
        output.writeInt32(10, regenHp_);
      }
      if (phyAttack_ != 0) {
        output.writeInt32(11, phyAttack_);
      }
      if (phyDef_ != 0) {
        output.writeInt32(12, phyDef_);
      }
      if (attackSpeed_ != 0F) {
        output.writeFloat(13, attackSpeed_);
      }
      if (moveSpeed_ != 0) {
        output.writeInt32(14, moveSpeed_);
      }
      if (phyStealHp_ != 0F) {
        output.writeFloat(15, phyStealHp_);
      }
      if (cdAddrat_ != 0F) {
        output.writeFloat(16, cdAddrat_);
      }
      if (phyPenetrate_ != 0) {
        output.writeInt32(17, phyPenetrate_);
      }
      if (tenacityRat_ != 0F) {
        output.writeFloat(18, tenacityRat_);
      }
      if (kickPow_ != 0) {
        output.writeInt32(19, kickPow_);
      }
      if (phyAttackCoe_ != 0F) {
        output.writeFloat(20, phyAttackCoe_);
      }
      if (moveSpeedCoe_ != 0F) {
        output.writeFloat(21, moveSpeedCoe_);
      }
      if (phyDefCoe_ != 0F) {
        output.writeFloat(22, phyDefCoe_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < partsId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(partsId_.get(i));
        }
        size += dataSize;
        if (!getPartsIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        partsIdMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < partsLevel_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(partsLevel_.get(i));
        }
        size += dataSize;
        if (!getPartsLevelList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        partsLevelMemoizedSerializedSize = dataSize;
      }
      if (godId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, godId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < advancesId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(advancesId_.get(i));
        }
        size += dataSize;
        if (!getAdvancesIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        advancesIdMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < skillsLevel_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(skillsLevel_.get(i));
        }
        size += dataSize;
        if (!getSkillsLevelList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        skillsLevelMemoizedSerializedSize = dataSize;
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, level_);
      }
      if (criticalStrike_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, criticalStrike_);
      }
      if (criticalStrikeEff_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, criticalStrikeEff_);
      }
      if (hpMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, hpMax_);
      }
      if (regenHp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, regenHp_);
      }
      if (phyAttack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, phyAttack_);
      }
      if (phyDef_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, phyDef_);
      }
      if (attackSpeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, attackSpeed_);
      }
      if (moveSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, moveSpeed_);
      }
      if (phyStealHp_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, phyStealHp_);
      }
      if (cdAddrat_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, cdAddrat_);
      }
      if (phyPenetrate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, phyPenetrate_);
      }
      if (tenacityRat_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, tenacityRat_);
      }
      if (kickPow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, kickPow_);
      }
      if (phyAttackCoe_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, phyAttackCoe_);
      }
      if (moveSpeedCoe_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, moveSpeedCoe_);
      }
      if (phyDefCoe_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, phyDefCoe_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BattleLogInfoDTO.BattleLogAttrChangeInfo)) {
        return super.equals(obj);
      }
      BattleLogInfoDTO.BattleLogAttrChangeInfo other = (BattleLogInfoDTO.BattleLogAttrChangeInfo) obj;

      boolean result = true;
      result = result && getPartsIdList()
          .equals(other.getPartsIdList());
      result = result && getPartsLevelList()
          .equals(other.getPartsLevelList());
      result = result && (getGodId()
          == other.getGodId());
      result = result && getAdvancesIdList()
          .equals(other.getAdvancesIdList());
      result = result && getSkillsLevelList()
          .equals(other.getSkillsLevelList());
      result = result && (getLevel()
          == other.getLevel());
      result = result && (
          Float.floatToIntBits(getCriticalStrike())
          == Float.floatToIntBits(
              other.getCriticalStrike()));
      result = result && (
          Float.floatToIntBits(getCriticalStrikeEff())
          == Float.floatToIntBits(
              other.getCriticalStrikeEff()));
      result = result && (getHpMax()
          == other.getHpMax());
      result = result && (getRegenHp()
          == other.getRegenHp());
      result = result && (getPhyAttack()
          == other.getPhyAttack());
      result = result && (getPhyDef()
          == other.getPhyDef());
      result = result && (
          Float.floatToIntBits(getAttackSpeed())
          == Float.floatToIntBits(
              other.getAttackSpeed()));
      result = result && (getMoveSpeed()
          == other.getMoveSpeed());
      result = result && (
          Float.floatToIntBits(getPhyStealHp())
          == Float.floatToIntBits(
              other.getPhyStealHp()));
      result = result && (
          Float.floatToIntBits(getCdAddrat())
          == Float.floatToIntBits(
              other.getCdAddrat()));
      result = result && (getPhyPenetrate()
          == other.getPhyPenetrate());
      result = result && (
          Float.floatToIntBits(getTenacityRat())
          == Float.floatToIntBits(
              other.getTenacityRat()));
      result = result && (getKickPow()
          == other.getKickPow());
      result = result && (
          Float.floatToIntBits(getPhyAttackCoe())
          == Float.floatToIntBits(
              other.getPhyAttackCoe()));
      result = result && (
          Float.floatToIntBits(getMoveSpeedCoe())
          == Float.floatToIntBits(
              other.getMoveSpeedCoe()));
      result = result && (
          Float.floatToIntBits(getPhyDefCoe())
          == Float.floatToIntBits(
              other.getPhyDefCoe()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPartsIdCount() > 0) {
        hash = (37 * hash) + PARTSID_FIELD_NUMBER;
        hash = (53 * hash) + getPartsIdList().hashCode();
      }
      if (getPartsLevelCount() > 0) {
        hash = (37 * hash) + PARTSLEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getPartsLevelList().hashCode();
      }
      hash = (37 * hash) + GODID_FIELD_NUMBER;
      hash = (53 * hash) + getGodId();
      if (getAdvancesIdCount() > 0) {
        hash = (37 * hash) + ADVANCESID_FIELD_NUMBER;
        hash = (53 * hash) + getAdvancesIdList().hashCode();
      }
      if (getSkillsLevelCount() > 0) {
        hash = (37 * hash) + SKILLSLEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillsLevelList().hashCode();
      }
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + CRITICALSTRIKE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getCriticalStrike());
      hash = (37 * hash) + CRITICALSTRIKEEFF_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getCriticalStrikeEff());
      hash = (37 * hash) + HPMAX_FIELD_NUMBER;
      hash = (53 * hash) + getHpMax();
      hash = (37 * hash) + REGENHP_FIELD_NUMBER;
      hash = (53 * hash) + getRegenHp();
      hash = (37 * hash) + PHYATTACK_FIELD_NUMBER;
      hash = (53 * hash) + getPhyAttack();
      hash = (37 * hash) + PHYDEF_FIELD_NUMBER;
      hash = (53 * hash) + getPhyDef();
      hash = (37 * hash) + ATTACKSPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAttackSpeed());
      hash = (37 * hash) + MOVESPEED_FIELD_NUMBER;
      hash = (53 * hash) + getMoveSpeed();
      hash = (37 * hash) + PHYSTEALHP_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPhyStealHp());
      hash = (37 * hash) + CDADDRAT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getCdAddrat());
      hash = (37 * hash) + PHYPENETRATE_FIELD_NUMBER;
      hash = (53 * hash) + getPhyPenetrate();
      hash = (37 * hash) + TENACITYRAT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getTenacityRat());
      hash = (37 * hash) + KICKPOW_FIELD_NUMBER;
      hash = (53 * hash) + getKickPow();
      hash = (37 * hash) + PHYATTACKCOE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPhyAttackCoe());
      hash = (37 * hash) + MOVESPEEDCOE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getMoveSpeedCoe());
      hash = (37 * hash) + PHYDEFCOE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getPhyDefCoe());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogAttrChangeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BattleLogInfoDTO.BattleLogAttrChangeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *属性变化
     * </pre>
     *
     * Protobuf type {@code BattleLogAttrChangeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BattleLogAttrChangeInfo)
        BattleLogInfoDTO.BattleLogAttrChangeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BattleLogInfoDTO.internal_static_BattleLogAttrChangeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BattleLogInfoDTO.internal_static_BattleLogAttrChangeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BattleLogInfoDTO.BattleLogAttrChangeInfo.class, BattleLogInfoDTO.BattleLogAttrChangeInfo.Builder.class);
      }

      // Construct using BattleLogInfoDTO.BattleLogAttrChangeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        partsId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        partsLevel_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        godId_ = 0;

        advancesId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        skillsLevel_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;

        criticalStrike_ = 0F;

        criticalStrikeEff_ = 0F;

        hpMax_ = 0;

        regenHp_ = 0;

        phyAttack_ = 0;

        phyDef_ = 0;

        attackSpeed_ = 0F;

        moveSpeed_ = 0;

        phyStealHp_ = 0F;

        cdAddrat_ = 0F;

        phyPenetrate_ = 0;

        tenacityRat_ = 0F;

        kickPow_ = 0;

        phyAttackCoe_ = 0F;

        moveSpeedCoe_ = 0F;

        phyDefCoe_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BattleLogInfoDTO.internal_static_BattleLogAttrChangeInfo_descriptor;
      }

      public BattleLogInfoDTO.BattleLogAttrChangeInfo getDefaultInstanceForType() {
        return BattleLogInfoDTO.BattleLogAttrChangeInfo.getDefaultInstance();
      }

      public BattleLogInfoDTO.BattleLogAttrChangeInfo build() {
        BattleLogInfoDTO.BattleLogAttrChangeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public BattleLogInfoDTO.BattleLogAttrChangeInfo buildPartial() {
        BattleLogInfoDTO.BattleLogAttrChangeInfo result = new BattleLogInfoDTO.BattleLogAttrChangeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          partsId_ = java.util.Collections.unmodifiableList(partsId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.partsId_ = partsId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          partsLevel_ = java.util.Collections.unmodifiableList(partsLevel_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.partsLevel_ = partsLevel_;
        result.godId_ = godId_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          advancesId_ = java.util.Collections.unmodifiableList(advancesId_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.advancesId_ = advancesId_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          skillsLevel_ = java.util.Collections.unmodifiableList(skillsLevel_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.skillsLevel_ = skillsLevel_;
        result.level_ = level_;
        result.criticalStrike_ = criticalStrike_;
        result.criticalStrikeEff_ = criticalStrikeEff_;
        result.hpMax_ = hpMax_;
        result.regenHp_ = regenHp_;
        result.phyAttack_ = phyAttack_;
        result.phyDef_ = phyDef_;
        result.attackSpeed_ = attackSpeed_;
        result.moveSpeed_ = moveSpeed_;
        result.phyStealHp_ = phyStealHp_;
        result.cdAddrat_ = cdAddrat_;
        result.phyPenetrate_ = phyPenetrate_;
        result.tenacityRat_ = tenacityRat_;
        result.kickPow_ = kickPow_;
        result.phyAttackCoe_ = phyAttackCoe_;
        result.moveSpeedCoe_ = moveSpeedCoe_;
        result.phyDefCoe_ = phyDefCoe_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BattleLogInfoDTO.BattleLogAttrChangeInfo) {
          return mergeFrom((BattleLogInfoDTO.BattleLogAttrChangeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BattleLogInfoDTO.BattleLogAttrChangeInfo other) {
        if (other == BattleLogInfoDTO.BattleLogAttrChangeInfo.getDefaultInstance()) return this;
        if (!other.partsId_.isEmpty()) {
          if (partsId_.isEmpty()) {
            partsId_ = other.partsId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePartsIdIsMutable();
            partsId_.addAll(other.partsId_);
          }
          onChanged();
        }
        if (!other.partsLevel_.isEmpty()) {
          if (partsLevel_.isEmpty()) {
            partsLevel_ = other.partsLevel_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePartsLevelIsMutable();
            partsLevel_.addAll(other.partsLevel_);
          }
          onChanged();
        }
        if (other.getGodId() != 0) {
          setGodId(other.getGodId());
        }
        if (!other.advancesId_.isEmpty()) {
          if (advancesId_.isEmpty()) {
            advancesId_ = other.advancesId_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAdvancesIdIsMutable();
            advancesId_.addAll(other.advancesId_);
          }
          onChanged();
        }
        if (!other.skillsLevel_.isEmpty()) {
          if (skillsLevel_.isEmpty()) {
            skillsLevel_ = other.skillsLevel_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSkillsLevelIsMutable();
            skillsLevel_.addAll(other.skillsLevel_);
          }
          onChanged();
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getCriticalStrike() != 0F) {
          setCriticalStrike(other.getCriticalStrike());
        }
        if (other.getCriticalStrikeEff() != 0F) {
          setCriticalStrikeEff(other.getCriticalStrikeEff());
        }
        if (other.getHpMax() != 0) {
          setHpMax(other.getHpMax());
        }
        if (other.getRegenHp() != 0) {
          setRegenHp(other.getRegenHp());
        }
        if (other.getPhyAttack() != 0) {
          setPhyAttack(other.getPhyAttack());
        }
        if (other.getPhyDef() != 0) {
          setPhyDef(other.getPhyDef());
        }
        if (other.getAttackSpeed() != 0F) {
          setAttackSpeed(other.getAttackSpeed());
        }
        if (other.getMoveSpeed() != 0) {
          setMoveSpeed(other.getMoveSpeed());
        }
        if (other.getPhyStealHp() != 0F) {
          setPhyStealHp(other.getPhyStealHp());
        }
        if (other.getCdAddrat() != 0F) {
          setCdAddrat(other.getCdAddrat());
        }
        if (other.getPhyPenetrate() != 0) {
          setPhyPenetrate(other.getPhyPenetrate());
        }
        if (other.getTenacityRat() != 0F) {
          setTenacityRat(other.getTenacityRat());
        }
        if (other.getKickPow() != 0) {
          setKickPow(other.getKickPow());
        }
        if (other.getPhyAttackCoe() != 0F) {
          setPhyAttackCoe(other.getPhyAttackCoe());
        }
        if (other.getMoveSpeedCoe() != 0F) {
          setMoveSpeedCoe(other.getMoveSpeedCoe());
        }
        if (other.getPhyDefCoe() != 0F) {
          setPhyDefCoe(other.getPhyDefCoe());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BattleLogInfoDTO.BattleLogAttrChangeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BattleLogInfoDTO.BattleLogAttrChangeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Integer> partsId_ = java.util.Collections.emptyList();
      private void ensurePartsIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          partsId_ = new java.util.ArrayList<Integer>(partsId_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsId = 1;</code>
       */
      public java.util.List<Integer>
          getPartsIdList() {
        return java.util.Collections.unmodifiableList(partsId_);
      }
      /**
       * <pre>
       *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsId = 1;</code>
       */
      public int getPartsIdCount() {
        return partsId_.size();
      }
      /**
       * <pre>
       *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsId = 1;</code>
       */
      public int getPartsId(int index) {
        return partsId_.get(index);
      }
      /**
       * <pre>
       *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsId = 1;</code>
       */
      public Builder setPartsId(
          int index, int value) {
        ensurePartsIdIsMutable();
        partsId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsId = 1;</code>
       */
      public Builder addPartsId(int value) {
        ensurePartsIdIsMutable();
        partsId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsId = 1;</code>
       */
      public Builder addAllPartsId(
          Iterable<? extends Integer> values) {
        ensurePartsIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, partsId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备部位生效装备id数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsId = 1;</code>
       */
      public Builder clearPartsId() {
        partsId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<Integer> partsLevel_ = java.util.Collections.emptyList();
      private void ensurePartsLevelIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          partsLevel_ = new java.util.ArrayList<Integer>(partsLevel_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsLevel = 2;</code>
       */
      public java.util.List<Integer>
          getPartsLevelList() {
        return java.util.Collections.unmodifiableList(partsLevel_);
      }
      /**
       * <pre>
       *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsLevel = 2;</code>
       */
      public int getPartsLevelCount() {
        return partsLevel_.size();
      }
      /**
       * <pre>
       *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsLevel = 2;</code>
       */
      public int getPartsLevel(int index) {
        return partsLevel_.get(index);
      }
      /**
       * <pre>
       *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsLevel = 2;</code>
       */
      public Builder setPartsLevel(
          int index, int value) {
        ensurePartsLevelIsMutable();
        partsLevel_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsLevel = 2;</code>
       */
      public Builder addPartsLevel(int value) {
        ensurePartsLevelIsMutable();
        partsLevel_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsLevel = 2;</code>
       */
      public Builder addAllPartsLevel(
          Iterable<? extends Integer> values) {
        ensurePartsLevelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, partsLevel_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备部位生效装备等级数组，按顺序为手部、头部、胸部、腿部
       * </pre>
       *
       * <code>repeated int32 PartsLevel = 2;</code>
       */
      public Builder clearPartsLevel() {
        partsLevel_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int godId_ ;
      /**
       * <pre>
       *神器id
       * </pre>
       *
       * <code>int32 GodId = 3;</code>
       */
      public int getGodId() {
        return godId_;
      }
      /**
       * <pre>
       *神器id
       * </pre>
       *
       * <code>int32 GodId = 3;</code>
       */
      public Builder setGodId(int value) {

        godId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *神器id
       * </pre>
       *
       * <code>int32 GodId = 3;</code>
       */
      public Builder clearGodId() {

        godId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Integer> advancesId_ = java.util.Collections.emptyList();
      private void ensureAdvancesIdIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          advancesId_ = new java.util.ArrayList<Integer>(advancesId_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       *选择的天赋id数组，按顺序为第一天赋、第二天赋
       * </pre>
       *
       * <code>repeated int32 AdvancesId = 4;</code>
       */
      public java.util.List<Integer>
          getAdvancesIdList() {
        return java.util.Collections.unmodifiableList(advancesId_);
      }
      /**
       * <pre>
       *选择的天赋id数组，按顺序为第一天赋、第二天赋
       * </pre>
       *
       * <code>repeated int32 AdvancesId = 4;</code>
       */
      public int getAdvancesIdCount() {
        return advancesId_.size();
      }
      /**
       * <pre>
       *选择的天赋id数组，按顺序为第一天赋、第二天赋
       * </pre>
       *
       * <code>repeated int32 AdvancesId = 4;</code>
       */
      public int getAdvancesId(int index) {
        return advancesId_.get(index);
      }
      /**
       * <pre>
       *选择的天赋id数组，按顺序为第一天赋、第二天赋
       * </pre>
       *
       * <code>repeated int32 AdvancesId = 4;</code>
       */
      public Builder setAdvancesId(
          int index, int value) {
        ensureAdvancesIdIsMutable();
        advancesId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *选择的天赋id数组，按顺序为第一天赋、第二天赋
       * </pre>
       *
       * <code>repeated int32 AdvancesId = 4;</code>
       */
      public Builder addAdvancesId(int value) {
        ensureAdvancesIdIsMutable();
        advancesId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *选择的天赋id数组，按顺序为第一天赋、第二天赋
       * </pre>
       *
       * <code>repeated int32 AdvancesId = 4;</code>
       */
      public Builder addAllAdvancesId(
          Iterable<? extends Integer> values) {
        ensureAdvancesIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, advancesId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *选择的天赋id数组，按顺序为第一天赋、第二天赋
       * </pre>
       *
       * <code>repeated int32 AdvancesId = 4;</code>
       */
      public Builder clearAdvancesId() {
        advancesId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<Integer> skillsLevel_ = java.util.Collections.emptyList();
      private void ensureSkillsLevelIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          skillsLevel_ = new java.util.ArrayList<Integer>(skillsLevel_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
       * </pre>
       *
       * <code>repeated int32 SkillsLevel = 5;</code>
       */
      public java.util.List<Integer>
          getSkillsLevelList() {
        return java.util.Collections.unmodifiableList(skillsLevel_);
      }
      /**
       * <pre>
       *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
       * </pre>
       *
       * <code>repeated int32 SkillsLevel = 5;</code>
       */
      public int getSkillsLevelCount() {
        return skillsLevel_.size();
      }
      /**
       * <pre>
       *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
       * </pre>
       *
       * <code>repeated int32 SkillsLevel = 5;</code>
       */
      public int getSkillsLevel(int index) {
        return skillsLevel_.get(index);
      }
      /**
       * <pre>
       *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
       * </pre>
       *
       * <code>repeated int32 SkillsLevel = 5;</code>
       */
      public Builder setSkillsLevel(
          int index, int value) {
        ensureSkillsLevelIsMutable();
        skillsLevel_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
       * </pre>
       *
       * <code>repeated int32 SkillsLevel = 5;</code>
       */
      public Builder addSkillsLevel(int value) {
        ensureSkillsLevelIsMutable();
        skillsLevel_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
       * </pre>
       *
       * <code>repeated int32 SkillsLevel = 5;</code>
       */
      public Builder addAllSkillsLevel(
          Iterable<? extends Integer> values) {
        ensureSkillsLevelIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, skillsLevel_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *技能等级数组，按顺序为第一技能、第二技能、第三技能、第四技能
       * </pre>
       *
       * <code>repeated int32 SkillsLevel = 5;</code>
       */
      public Builder clearSkillsLevel() {
        skillsLevel_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       *英雄等级
       * </pre>
       *
       * <code>int32 Level = 6;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       *英雄等级
       * </pre>
       *
       * <code>int32 Level = 6;</code>
       */
      public Builder setLevel(int value) {

        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *英雄等级
       * </pre>
       *
       * <code>int32 Level = 6;</code>
       */
      public Builder clearLevel() {

        level_ = 0;
        onChanged();
        return this;
      }

      private float criticalStrike_ ;
      /**
       * <pre>
       *暴击率
       * </pre>
       *
       * <code>float CriticalStrike = 7;</code>
       */
      public float getCriticalStrike() {
        return criticalStrike_;
      }
      /**
       * <pre>
       *暴击率
       * </pre>
       *
       * <code>float CriticalStrike = 7;</code>
       */
      public Builder setCriticalStrike(float value) {

        criticalStrike_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *暴击率
       * </pre>
       *
       * <code>float CriticalStrike = 7;</code>
       */
      public Builder clearCriticalStrike() {

        criticalStrike_ = 0F;
        onChanged();
        return this;
      }

      private float criticalStrikeEff_ ;
      /**
       * <pre>
       *爆伤系数
       * </pre>
       *
       * <code>float CriticalStrikeEff = 8;</code>
       */
      public float getCriticalStrikeEff() {
        return criticalStrikeEff_;
      }
      /**
       * <pre>
       *爆伤系数
       * </pre>
       *
       * <code>float CriticalStrikeEff = 8;</code>
       */
      public Builder setCriticalStrikeEff(float value) {

        criticalStrikeEff_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *爆伤系数
       * </pre>
       *
       * <code>float CriticalStrikeEff = 8;</code>
       */
      public Builder clearCriticalStrikeEff() {

        criticalStrikeEff_ = 0F;
        onChanged();
        return this;
      }

      private int hpMax_ ;
      /**
       * <pre>
       *最大生命
       * </pre>
       *
       * <code>int32 HpMax = 9;</code>
       */
      public int getHpMax() {
        return hpMax_;
      }
      /**
       * <pre>
       *最大生命
       * </pre>
       *
       * <code>int32 HpMax = 9;</code>
       */
      public Builder setHpMax(int value) {

        hpMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大生命
       * </pre>
       *
       * <code>int32 HpMax = 9;</code>
       */
      public Builder clearHpMax() {

        hpMax_ = 0;
        onChanged();
        return this;
      }

      private int regenHp_ ;
      /**
       * <pre>
       *每5s回血
       * </pre>
       *
       * <code>int32 RegenHp = 10;</code>
       */
      public int getRegenHp() {
        return regenHp_;
      }
      /**
       * <pre>
       *每5s回血
       * </pre>
       *
       * <code>int32 RegenHp = 10;</code>
       */
      public Builder setRegenHp(int value) {

        regenHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *每5s回血
       * </pre>
       *
       * <code>int32 RegenHp = 10;</code>
       */
      public Builder clearRegenHp() {

        regenHp_ = 0;
        onChanged();
        return this;
      }

      private int phyAttack_ ;
      /**
       * <pre>
       *基础攻击力
       * </pre>
       *
       * <code>int32 PhyAttack = 11;</code>
       */
      public int getPhyAttack() {
        return phyAttack_;
      }
      /**
       * <pre>
       *基础攻击力
       * </pre>
       *
       * <code>int32 PhyAttack = 11;</code>
       */
      public Builder setPhyAttack(int value) {

        phyAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *基础攻击力
       * </pre>
       *
       * <code>int32 PhyAttack = 11;</code>
       */
      public Builder clearPhyAttack() {

        phyAttack_ = 0;
        onChanged();
        return this;
      }

      private int phyDef_ ;
      /**
       * <pre>
       *抗性
       * </pre>
       *
       * <code>int32 PhyDef = 12;</code>
       */
      public int getPhyDef() {
        return phyDef_;
      }
      /**
       * <pre>
       *抗性
       * </pre>
       *
       * <code>int32 PhyDef = 12;</code>
       */
      public Builder setPhyDef(int value) {

        phyDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *抗性
       * </pre>
       *
       * <code>int32 PhyDef = 12;</code>
       */
      public Builder clearPhyDef() {

        phyDef_ = 0;
        onChanged();
        return this;
      }

      private float attackSpeed_ ;
      /**
       * <pre>
       *攻速加成
       * </pre>
       *
       * <code>float AttackSpeed = 13;</code>
       */
      public float getAttackSpeed() {
        return attackSpeed_;
      }
      /**
       * <pre>
       *攻速加成
       * </pre>
       *
       * <code>float AttackSpeed = 13;</code>
       */
      public Builder setAttackSpeed(float value) {

        attackSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *攻速加成
       * </pre>
       *
       * <code>float AttackSpeed = 13;</code>
       */
      public Builder clearAttackSpeed() {

        attackSpeed_ = 0F;
        onChanged();
        return this;
      }

      private int moveSpeed_ ;
      /**
       * <pre>
       *基础移动速度
       * </pre>
       *
       * <code>int32 MoveSpeed = 14;</code>
       */
      public int getMoveSpeed() {
        return moveSpeed_;
      }
      /**
       * <pre>
       *基础移动速度
       * </pre>
       *
       * <code>int32 MoveSpeed = 14;</code>
       */
      public Builder setMoveSpeed(int value) {

        moveSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *基础移动速度
       * </pre>
       *
       * <code>int32 MoveSpeed = 14;</code>
       */
      public Builder clearMoveSpeed() {

        moveSpeed_ = 0;
        onChanged();
        return this;
      }

      private float phyStealHp_ ;
      /**
       * <pre>
       *普攻吸血
       * </pre>
       *
       * <code>float PhyStealHp = 15;</code>
       */
      public float getPhyStealHp() {
        return phyStealHp_;
      }
      /**
       * <pre>
       *普攻吸血
       * </pre>
       *
       * <code>float PhyStealHp = 15;</code>
       */
      public Builder setPhyStealHp(float value) {

        phyStealHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *普攻吸血
       * </pre>
       *
       * <code>float PhyStealHp = 15;</code>
       */
      public Builder clearPhyStealHp() {

        phyStealHp_ = 0F;
        onChanged();
        return this;
      }

      private float cdAddrat_ ;
      /**
       * <pre>
       *冷却缩减
       * </pre>
       *
       * <code>float CdAddrat = 16;</code>
       */
      public float getCdAddrat() {
        return cdAddrat_;
      }
      /**
       * <pre>
       *冷却缩减
       * </pre>
       *
       * <code>float CdAddrat = 16;</code>
       */
      public Builder setCdAddrat(float value) {

        cdAddrat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *冷却缩减
       * </pre>
       *
       * <code>float CdAddrat = 16;</code>
       */
      public Builder clearCdAddrat() {

        cdAddrat_ = 0F;
        onChanged();
        return this;
      }

      private int phyPenetrate_ ;
      /**
       * <pre>
       *穿透
       * </pre>
       *
       * <code>int32 PhyPenetrate = 17;</code>
       */
      public int getPhyPenetrate() {
        return phyPenetrate_;
      }
      /**
       * <pre>
       *穿透
       * </pre>
       *
       * <code>int32 PhyPenetrate = 17;</code>
       */
      public Builder setPhyPenetrate(int value) {

        phyPenetrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *穿透
       * </pre>
       *
       * <code>int32 PhyPenetrate = 17;</code>
       */
      public Builder clearPhyPenetrate() {

        phyPenetrate_ = 0;
        onChanged();
        return this;
      }

      private float tenacityRat_ ;
      /**
       * <pre>
       *韧性
       * </pre>
       *
       * <code>float TenacityRat = 18;</code>
       */
      public float getTenacityRat() {
        return tenacityRat_;
      }
      /**
       * <pre>
       *韧性
       * </pre>
       *
       * <code>float TenacityRat = 18;</code>
       */
      public Builder setTenacityRat(float value) {

        tenacityRat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *韧性
       * </pre>
       *
       * <code>float TenacityRat = 18;</code>
       */
      public Builder clearTenacityRat() {

        tenacityRat_ = 0F;
        onChanged();
        return this;
      }

      private int kickPow_ ;
      /**
       * <pre>
       *法力
       * </pre>
       *
       * <code>int32 KickPow = 19;</code>
       */
      public int getKickPow() {
        return kickPow_;
      }
      /**
       * <pre>
       *法力
       * </pre>
       *
       * <code>int32 KickPow = 19;</code>
       */
      public Builder setKickPow(int value) {

        kickPow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *法力
       * </pre>
       *
       * <code>int32 KickPow = 19;</code>
       */
      public Builder clearKickPow() {

        kickPow_ = 0;
        onChanged();
        return this;
      }

      private float phyAttackCoe_ ;
      /**
       * <pre>
       *物理攻击百分比
       * </pre>
       *
       * <code>float PhyAttackCoe = 20;</code>
       */
      public float getPhyAttackCoe() {
        return phyAttackCoe_;
      }
      /**
       * <pre>
       *物理攻击百分比
       * </pre>
       *
       * <code>float PhyAttackCoe = 20;</code>
       */
      public Builder setPhyAttackCoe(float value) {

        phyAttackCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *物理攻击百分比
       * </pre>
       *
       * <code>float PhyAttackCoe = 20;</code>
       */
      public Builder clearPhyAttackCoe() {

        phyAttackCoe_ = 0F;
        onChanged();
        return this;
      }

      private float moveSpeedCoe_ ;
      /**
       * <pre>
       *移动速度百分比
       * </pre>
       *
       * <code>float MoveSpeedCoe = 21;</code>
       */
      public float getMoveSpeedCoe() {
        return moveSpeedCoe_;
      }
      /**
       * <pre>
       *移动速度百分比
       * </pre>
       *
       * <code>float MoveSpeedCoe = 21;</code>
       */
      public Builder setMoveSpeedCoe(float value) {

        moveSpeedCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *移动速度百分比
       * </pre>
       *
       * <code>float MoveSpeedCoe = 21;</code>
       */
      public Builder clearMoveSpeedCoe() {

        moveSpeedCoe_ = 0F;
        onChanged();
        return this;
      }

      private float phyDefCoe_ ;
      /**
       * <pre>
       *物理防御百分比
       * </pre>
       *
       * <code>float PhyDefCoe = 22;</code>
       */
      public float getPhyDefCoe() {
        return phyDefCoe_;
      }
      /**
       * <pre>
       *物理防御百分比
       * </pre>
       *
       * <code>float PhyDefCoe = 22;</code>
       */
      public Builder setPhyDefCoe(float value) {

        phyDefCoe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *物理防御百分比
       * </pre>
       *
       * <code>float PhyDefCoe = 22;</code>
       */
      public Builder clearPhyDefCoe() {

        phyDefCoe_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BattleLogAttrChangeInfo)
    }

    // @@protoc_insertion_point(class_scope:BattleLogAttrChangeInfo)
    private static final BattleLogInfoDTO.BattleLogAttrChangeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BattleLogInfoDTO.BattleLogAttrChangeInfo();
    }

    public static BattleLogInfoDTO.BattleLogAttrChangeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BattleLogAttrChangeInfo>
        PARSER = new com.google.protobuf.AbstractParser<BattleLogAttrChangeInfo>() {
      public BattleLogAttrChangeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BattleLogAttrChangeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BattleLogAttrChangeInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BattleLogAttrChangeInfo> getParserForType() {
      return PARSER;
    }

    public BattleLogInfoDTO.BattleLogAttrChangeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BattleLogInfoListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BattleLogInfoList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *上报手机操作系统
     * </pre>
     *
     * <code>string Platform = 1;</code>
     */
    String getPlatform();
    /**
     * <pre>
     *上报手机操作系统
     * </pre>
     *
     * <code>string Platform = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlatformBytes();

    /**
     * <pre>
     *角色账号id
     * </pre>
     *
     * <code>string PlayerId = 2;</code>
     */
    String getPlayerId();
    /**
     * <pre>
     *角色账号id
     * </pre>
     *
     * <code>string PlayerId = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdBytes();

    /**
     * <pre>
     *角色名
     * </pre>
     *
     * <code>string AccountName = 3;</code>
     */
    String getAccountName();
    /**
     * <pre>
     *角色名
     * </pre>
     *
     * <code>string AccountName = 3;</code>
     */
    com.google.protobuf.ByteString
        getAccountNameBytes();

    /**
     * <pre>
     *区id
     * </pre>
     *
     * <code>string AreaId = 4;</code>
     */
    String getAreaId();
    /**
     * <pre>
     *区id
     * </pre>
     *
     * <code>string AreaId = 4;</code>
     */
    com.google.protobuf.ByteString
        getAreaIdBytes();

    /**
     * <pre>
     *包版本号
     * </pre>
     *
     * <code>string AppVersion = 5;</code>
     */
    String getAppVersion();
    /**
     * <pre>
     *包版本号
     * </pre>
     *
     * <code>string AppVersion = 5;</code>
     */
    com.google.protobuf.ByteString
        getAppVersionBytes();

    /**
     * <pre>
     *资源版本号
     * </pre>
     *
     * <code>string ResourceVersion = 6;</code>
     */
    String getResourceVersion();
    /**
     * <pre>
     *资源版本号
     * </pre>
     *
     * <code>string ResourceVersion = 6;</code>
     */
    com.google.protobuf.ByteString
        getResourceVersionBytes();

    /**
     * <pre>
     *项目编码
     * </pre>
     *
     * <code>string ProjectId = 7;</code>
     */
    String getProjectId();
    /**
     * <pre>
     *项目编码
     * </pre>
     *
     * <code>string ProjectId = 7;</code>
     */
    com.google.protobuf.ByteString
        getProjectIdBytes();

    /**
     * <pre>
     *每次运行的唯一id
     * </pre>
     *
     * <code>int32 RunningId = 8;</code>
     */
    int getRunningId();

    /**
     * <pre>
     *数据格式版本号
     * </pre>
     *
     * <code>string FormatVersion = 9;</code>
     */
    String getFormatVersion();
    /**
     * <pre>
     *数据格式版本号
     * </pre>
     *
     * <code>string FormatVersion = 9;</code>
     */
    com.google.protobuf.ByteString
        getFormatVersionBytes();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>int64 TimeStamp = 10;</code>
     */
    long getTimeStamp();

    /**
     * <pre>
     *战斗id
     * </pre>
     *
     * <code>string DungeonId = 11;</code>
     */
    String getDungeonId();
    /**
     * <pre>
     *战斗id
     * </pre>
     *
     * <code>string DungeonId = 11;</code>
     */
    com.google.protobuf.ByteString
        getDungeonIdBytes();

    /**
     * <pre>
     *上报人的英雄id
     * </pre>
     *
     * <code>int32 LogHeroId = 12;</code>
     */
    int getLogHeroId();

    /**
     * <pre>
     *上报人的阵营
     * </pre>
     *
     * <code>bool LogHeroRace = 13;</code>
     */
    boolean getLogHeroRace();

    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    java.util.List<BattleLogBaseInfo>
        getInfosList();
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    BattleLogInfoDTO.BattleLogBaseInfo getInfos(int index);
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    int getInfosCount();
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    java.util.List<? extends BattleLogBaseInfoOrBuilder>
        getInfosOrBuilderList();
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    BattleLogInfoDTO.BattleLogBaseInfoOrBuilder getInfosOrBuilder(
        int index);
  }
  /**
   * <pre>
   *公共部分，log数组中的每条log，这些字段的值都相同
   * </pre>
   *
   * Protobuf type {@code BattleLogInfoList}
   */
  public  static final class BattleLogInfoList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BattleLogInfoList)
      BattleLogInfoListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BattleLogInfoList.newBuilder() to construct.
    private BattleLogInfoList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BattleLogInfoList() {
      platform_ = "";
      playerId_ = "";
      accountName_ = "";
      areaId_ = "";
      appVersion_ = "";
      resourceVersion_ = "";
      projectId_ = "";
      runningId_ = 0;
      formatVersion_ = "";
      timeStamp_ = 0L;
      dungeonId_ = "";
      logHeroId_ = 0;
      logHeroRace_ = false;
      infos_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BattleLogInfoList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              platform_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              playerId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              accountName_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              areaId_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              appVersion_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              resourceVersion_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              projectId_ = s;
              break;
            }
            case 64: {

              runningId_ = input.readInt32();
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              formatVersion_ = s;
              break;
            }
            case 80: {

              timeStamp_ = input.readInt64();
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();

              dungeonId_ = s;
              break;
            }
            case 96: {

              logHeroId_ = input.readInt32();
              break;
            }
            case 104: {

              logHeroRace_ = input.readBool();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                infos_ = new java.util.ArrayList<BattleLogBaseInfo>();
                mutable_bitField0_ |= 0x00002000;
              }
              infos_.add(
                  input.readMessage(BattleLogInfoDTO.BattleLogBaseInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BattleLogInfoDTO.internal_static_BattleLogInfoList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BattleLogInfoDTO.internal_static_BattleLogInfoList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BattleLogInfoDTO.BattleLogInfoList.class, BattleLogInfoDTO.BattleLogInfoList.Builder.class);
    }

    private int bitField0_;
    public static final int PLATFORM_FIELD_NUMBER = 1;
    private volatile Object platform_;
    /**
     * <pre>
     *上报手机操作系统
     * </pre>
     *
     * <code>string Platform = 1;</code>
     */
    public String getPlatform() {
      Object ref = platform_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        platform_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *上报手机操作系统
     * </pre>
     *
     * <code>string Platform = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlatformBytes() {
      Object ref = platform_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        platform_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private volatile Object playerId_;
    /**
     * <pre>
     *角色账号id
     * </pre>
     *
     * <code>string PlayerId = 2;</code>
     */
    public String getPlayerId() {
      Object ref = playerId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        playerId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *角色账号id
     * </pre>
     *
     * <code>string PlayerId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdBytes() {
      Object ref = playerId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        playerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACCOUNTNAME_FIELD_NUMBER = 3;
    private volatile Object accountName_;
    /**
     * <pre>
     *角色名
     * </pre>
     *
     * <code>string AccountName = 3;</code>
     */
    public String getAccountName() {
      Object ref = accountName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        accountName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *角色名
     * </pre>
     *
     * <code>string AccountName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAccountNameBytes() {
      Object ref = accountName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        accountName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AREAID_FIELD_NUMBER = 4;
    private volatile Object areaId_;
    /**
     * <pre>
     *区id
     * </pre>
     *
     * <code>string AreaId = 4;</code>
     */
    public String getAreaId() {
      Object ref = areaId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        areaId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *区id
     * </pre>
     *
     * <code>string AreaId = 4;</code>
     */
    public com.google.protobuf.ByteString
        getAreaIdBytes() {
      Object ref = areaId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        areaId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APPVERSION_FIELD_NUMBER = 5;
    private volatile Object appVersion_;
    /**
     * <pre>
     *包版本号
     * </pre>
     *
     * <code>string AppVersion = 5;</code>
     */
    public String getAppVersion() {
      Object ref = appVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *包版本号
     * </pre>
     *
     * <code>string AppVersion = 5;</code>
     */
    public com.google.protobuf.ByteString
        getAppVersionBytes() {
      Object ref = appVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOURCEVERSION_FIELD_NUMBER = 6;
    private volatile Object resourceVersion_;
    /**
     * <pre>
     *资源版本号
     * </pre>
     *
     * <code>string ResourceVersion = 6;</code>
     */
    public String getResourceVersion() {
      Object ref = resourceVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        resourceVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *资源版本号
     * </pre>
     *
     * <code>string ResourceVersion = 6;</code>
     */
    public com.google.protobuf.ByteString
        getResourceVersionBytes() {
      Object ref = resourceVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        resourceVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROJECTID_FIELD_NUMBER = 7;
    private volatile Object projectId_;
    /**
     * <pre>
     *项目编码
     * </pre>
     *
     * <code>string ProjectId = 7;</code>
     */
    public String getProjectId() {
      Object ref = projectId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        projectId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *项目编码
     * </pre>
     *
     * <code>string ProjectId = 7;</code>
     */
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      Object ref = projectId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RUNNINGID_FIELD_NUMBER = 8;
    private int runningId_;
    /**
     * <pre>
     *每次运行的唯一id
     * </pre>
     *
     * <code>int32 RunningId = 8;</code>
     */
    public int getRunningId() {
      return runningId_;
    }

    public static final int FORMATVERSION_FIELD_NUMBER = 9;
    private volatile Object formatVersion_;
    /**
     * <pre>
     *数据格式版本号
     * </pre>
     *
     * <code>string FormatVersion = 9;</code>
     */
    public String getFormatVersion() {
      Object ref = formatVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        formatVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *数据格式版本号
     * </pre>
     *
     * <code>string FormatVersion = 9;</code>
     */
    public com.google.protobuf.ByteString
        getFormatVersionBytes() {
      Object ref = formatVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        formatVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 10;
    private long timeStamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>int64 TimeStamp = 10;</code>
     */
    public long getTimeStamp() {
      return timeStamp_;
    }

    public static final int DUNGEONID_FIELD_NUMBER = 11;
    private volatile Object dungeonId_;
    /**
     * <pre>
     *战斗id
     * </pre>
     *
     * <code>string DungeonId = 11;</code>
     */
    public String getDungeonId() {
      Object ref = dungeonId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dungeonId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *战斗id
     * </pre>
     *
     * <code>string DungeonId = 11;</code>
     */
    public com.google.protobuf.ByteString
        getDungeonIdBytes() {
      Object ref = dungeonId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dungeonId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGHEROID_FIELD_NUMBER = 12;
    private int logHeroId_;
    /**
     * <pre>
     *上报人的英雄id
     * </pre>
     *
     * <code>int32 LogHeroId = 12;</code>
     */
    public int getLogHeroId() {
      return logHeroId_;
    }

    public static final int LOGHERORACE_FIELD_NUMBER = 13;
    private boolean logHeroRace_;
    /**
     * <pre>
     *上报人的阵营
     * </pre>
     *
     * <code>bool LogHeroRace = 13;</code>
     */
    public boolean getLogHeroRace() {
      return logHeroRace_;
    }

    public static final int INFOS_FIELD_NUMBER = 14;
    private java.util.List<BattleLogBaseInfo> infos_;
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    public java.util.List<BattleLogBaseInfo> getInfosList() {
      return infos_;
    }
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    public java.util.List<? extends BattleLogBaseInfoOrBuilder>
        getInfosOrBuilderList() {
      return infos_;
    }
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    public int getInfosCount() {
      return infos_.size();
    }
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    public BattleLogInfoDTO.BattleLogBaseInfo getInfos(int index) {
      return infos_.get(index);
    }
    /**
     * <pre>
     *上报的log数组
     * </pre>
     *
     * <code>repeated .BattleLogBaseInfo infos = 14;</code>
     */
    public BattleLogInfoDTO.BattleLogBaseInfoOrBuilder getInfosOrBuilder(
        int index) {
      return infos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPlatformBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, platform_);
      }
      if (!getPlayerIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, playerId_);
      }
      if (!getAccountNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, accountName_);
      }
      if (!getAreaIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, areaId_);
      }
      if (!getAppVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, appVersion_);
      }
      if (!getResourceVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, resourceVersion_);
      }
      if (!getProjectIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, projectId_);
      }
      if (runningId_ != 0) {
        output.writeInt32(8, runningId_);
      }
      if (!getFormatVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, formatVersion_);
      }
      if (timeStamp_ != 0L) {
        output.writeInt64(10, timeStamp_);
      }
      if (!getDungeonIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, dungeonId_);
      }
      if (logHeroId_ != 0) {
        output.writeInt32(12, logHeroId_);
      }
      if (logHeroRace_ != false) {
        output.writeBool(13, logHeroRace_);
      }
      for (int i = 0; i < infos_.size(); i++) {
        output.writeMessage(14, infos_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPlatformBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, platform_);
      }
      if (!getPlayerIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, playerId_);
      }
      if (!getAccountNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, accountName_);
      }
      if (!getAreaIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, areaId_);
      }
      if (!getAppVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, appVersion_);
      }
      if (!getResourceVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, resourceVersion_);
      }
      if (!getProjectIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, projectId_);
      }
      if (runningId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, runningId_);
      }
      if (!getFormatVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, formatVersion_);
      }
      if (timeStamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, timeStamp_);
      }
      if (!getDungeonIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, dungeonId_);
      }
      if (logHeroId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, logHeroId_);
      }
      if (logHeroRace_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, logHeroRace_);
      }
      for (int i = 0; i < infos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, infos_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BattleLogInfoDTO.BattleLogInfoList)) {
        return super.equals(obj);
      }
      BattleLogInfoDTO.BattleLogInfoList other = (BattleLogInfoDTO.BattleLogInfoList) obj;

      boolean result = true;
      result = result && getPlatform()
          .equals(other.getPlatform());
      result = result && getPlayerId()
          .equals(other.getPlayerId());
      result = result && getAccountName()
          .equals(other.getAccountName());
      result = result && getAreaId()
          .equals(other.getAreaId());
      result = result && getAppVersion()
          .equals(other.getAppVersion());
      result = result && getResourceVersion()
          .equals(other.getResourceVersion());
      result = result && getProjectId()
          .equals(other.getProjectId());
      result = result && (getRunningId()
          == other.getRunningId());
      result = result && getFormatVersion()
          .equals(other.getFormatVersion());
      result = result && (getTimeStamp()
          == other.getTimeStamp());
      result = result && getDungeonId()
          .equals(other.getDungeonId());
      result = result && (getLogHeroId()
          == other.getLogHeroId());
      result = result && (getLogHeroRace()
          == other.getLogHeroRace());
      result = result && getInfosList()
          .equals(other.getInfosList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLATFORM_FIELD_NUMBER;
      hash = (53 * hash) + getPlatform().hashCode();
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId().hashCode();
      hash = (37 * hash) + ACCOUNTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getAccountName().hashCode();
      hash = (37 * hash) + AREAID_FIELD_NUMBER;
      hash = (53 * hash) + getAreaId().hashCode();
      hash = (37 * hash) + APPVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getAppVersion().hashCode();
      hash = (37 * hash) + RESOURCEVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getResourceVersion().hashCode();
      hash = (37 * hash) + PROJECTID_FIELD_NUMBER;
      hash = (53 * hash) + getProjectId().hashCode();
      hash = (37 * hash) + RUNNINGID_FIELD_NUMBER;
      hash = (53 * hash) + getRunningId();
      hash = (37 * hash) + FORMATVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getFormatVersion().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeStamp());
      hash = (37 * hash) + DUNGEONID_FIELD_NUMBER;
      hash = (53 * hash) + getDungeonId().hashCode();
      hash = (37 * hash) + LOGHEROID_FIELD_NUMBER;
      hash = (53 * hash) + getLogHeroId();
      hash = (37 * hash) + LOGHERORACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLogHeroRace());
      if (getInfosCount() > 0) {
        hash = (37 * hash) + INFOS_FIELD_NUMBER;
        hash = (53 * hash) + getInfosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BattleLogInfoDTO.BattleLogInfoList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BattleLogInfoDTO.BattleLogInfoList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *公共部分，log数组中的每条log，这些字段的值都相同
     * </pre>
     *
     * Protobuf type {@code BattleLogInfoList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BattleLogInfoList)
        BattleLogInfoDTO.BattleLogInfoListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BattleLogInfoDTO.internal_static_BattleLogInfoList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BattleLogInfoDTO.internal_static_BattleLogInfoList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BattleLogInfoDTO.BattleLogInfoList.class, BattleLogInfoDTO.BattleLogInfoList.Builder.class);
      }

      // Construct using BattleLogInfoDTO.BattleLogInfoList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInfosFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        platform_ = "";

        playerId_ = "";

        accountName_ = "";

        areaId_ = "";

        appVersion_ = "";

        resourceVersion_ = "";

        projectId_ = "";

        runningId_ = 0;

        formatVersion_ = "";

        timeStamp_ = 0L;

        dungeonId_ = "";

        logHeroId_ = 0;

        logHeroRace_ = false;

        if (infosBuilder_ == null) {
          infos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          infosBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BattleLogInfoDTO.internal_static_BattleLogInfoList_descriptor;
      }

      public BattleLogInfoDTO.BattleLogInfoList getDefaultInstanceForType() {
        return BattleLogInfoDTO.BattleLogInfoList.getDefaultInstance();
      }

      public BattleLogInfoDTO.BattleLogInfoList build() {
        BattleLogInfoDTO.BattleLogInfoList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public BattleLogInfoDTO.BattleLogInfoList buildPartial() {
        BattleLogInfoDTO.BattleLogInfoList result = new BattleLogInfoDTO.BattleLogInfoList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.platform_ = platform_;
        result.playerId_ = playerId_;
        result.accountName_ = accountName_;
        result.areaId_ = areaId_;
        result.appVersion_ = appVersion_;
        result.resourceVersion_ = resourceVersion_;
        result.projectId_ = projectId_;
        result.runningId_ = runningId_;
        result.formatVersion_ = formatVersion_;
        result.timeStamp_ = timeStamp_;
        result.dungeonId_ = dungeonId_;
        result.logHeroId_ = logHeroId_;
        result.logHeroRace_ = logHeroRace_;
        if (infosBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            infos_ = java.util.Collections.unmodifiableList(infos_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.infos_ = infos_;
        } else {
          result.infos_ = infosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BattleLogInfoDTO.BattleLogInfoList) {
          return mergeFrom((BattleLogInfoDTO.BattleLogInfoList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BattleLogInfoDTO.BattleLogInfoList other) {
        if (other == BattleLogInfoDTO.BattleLogInfoList.getDefaultInstance()) return this;
        if (!other.getPlatform().isEmpty()) {
          platform_ = other.platform_;
          onChanged();
        }
        if (!other.getPlayerId().isEmpty()) {
          playerId_ = other.playerId_;
          onChanged();
        }
        if (!other.getAccountName().isEmpty()) {
          accountName_ = other.accountName_;
          onChanged();
        }
        if (!other.getAreaId().isEmpty()) {
          areaId_ = other.areaId_;
          onChanged();
        }
        if (!other.getAppVersion().isEmpty()) {
          appVersion_ = other.appVersion_;
          onChanged();
        }
        if (!other.getResourceVersion().isEmpty()) {
          resourceVersion_ = other.resourceVersion_;
          onChanged();
        }
        if (!other.getProjectId().isEmpty()) {
          projectId_ = other.projectId_;
          onChanged();
        }
        if (other.getRunningId() != 0) {
          setRunningId(other.getRunningId());
        }
        if (!other.getFormatVersion().isEmpty()) {
          formatVersion_ = other.formatVersion_;
          onChanged();
        }
        if (other.getTimeStamp() != 0L) {
          setTimeStamp(other.getTimeStamp());
        }
        if (!other.getDungeonId().isEmpty()) {
          dungeonId_ = other.dungeonId_;
          onChanged();
        }
        if (other.getLogHeroId() != 0) {
          setLogHeroId(other.getLogHeroId());
        }
        if (other.getLogHeroRace() != false) {
          setLogHeroRace(other.getLogHeroRace());
        }
        if (infosBuilder_ == null) {
          if (!other.infos_.isEmpty()) {
            if (infos_.isEmpty()) {
              infos_ = other.infos_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureInfosIsMutable();
              infos_.addAll(other.infos_);
            }
            onChanged();
          }
        } else {
          if (!other.infos_.isEmpty()) {
            if (infosBuilder_.isEmpty()) {
              infosBuilder_.dispose();
              infosBuilder_ = null;
              infos_ = other.infos_;
              bitField0_ = (bitField0_ & ~0x00002000);
              infosBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInfosFieldBuilder() : null;
            } else {
              infosBuilder_.addAllMessages(other.infos_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BattleLogInfoDTO.BattleLogInfoList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BattleLogInfoDTO.BattleLogInfoList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object platform_ = "";
      /**
       * <pre>
       *上报手机操作系统
       * </pre>
       *
       * <code>string Platform = 1;</code>
       */
      public String getPlatform() {
        Object ref = platform_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          platform_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *上报手机操作系统
       * </pre>
       *
       * <code>string Platform = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlatformBytes() {
        Object ref = platform_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          platform_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *上报手机操作系统
       * </pre>
       *
       * <code>string Platform = 1;</code>
       */
      public Builder setPlatform(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        platform_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报手机操作系统
       * </pre>
       *
       * <code>string Platform = 1;</code>
       */
      public Builder clearPlatform() {

        platform_ = getDefaultInstance().getPlatform();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报手机操作系统
       * </pre>
       *
       * <code>string Platform = 1;</code>
       */
      public Builder setPlatformBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        platform_ = value;
        onChanged();
        return this;
      }

      private Object playerId_ = "";
      /**
       * <pre>
       *角色账号id
       * </pre>
       *
       * <code>string PlayerId = 2;</code>
       */
      public String getPlayerId() {
        Object ref = playerId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          playerId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *角色账号id
       * </pre>
       *
       * <code>string PlayerId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdBytes() {
        Object ref = playerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          playerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *角色账号id
       * </pre>
       *
       * <code>string PlayerId = 2;</code>
       */
      public Builder setPlayerId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *角色账号id
       * </pre>
       *
       * <code>string PlayerId = 2;</code>
       */
      public Builder clearPlayerId() {

        playerId_ = getDefaultInstance().getPlayerId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *角色账号id
       * </pre>
       *
       * <code>string PlayerId = 2;</code>
       */
      public Builder setPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        playerId_ = value;
        onChanged();
        return this;
      }

      private Object accountName_ = "";
      /**
       * <pre>
       *角色名
       * </pre>
       *
       * <code>string AccountName = 3;</code>
       */
      public String getAccountName() {
        Object ref = accountName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          accountName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *角色名
       * </pre>
       *
       * <code>string AccountName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAccountNameBytes() {
        Object ref = accountName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          accountName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *角色名
       * </pre>
       *
       * <code>string AccountName = 3;</code>
       */
      public Builder setAccountName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        accountName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *角色名
       * </pre>
       *
       * <code>string AccountName = 3;</code>
       */
      public Builder clearAccountName() {

        accountName_ = getDefaultInstance().getAccountName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *角色名
       * </pre>
       *
       * <code>string AccountName = 3;</code>
       */
      public Builder setAccountNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        accountName_ = value;
        onChanged();
        return this;
      }

      private Object areaId_ = "";
      /**
       * <pre>
       *区id
       * </pre>
       *
       * <code>string AreaId = 4;</code>
       */
      public String getAreaId() {
        Object ref = areaId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          areaId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *区id
       * </pre>
       *
       * <code>string AreaId = 4;</code>
       */
      public com.google.protobuf.ByteString
          getAreaIdBytes() {
        Object ref = areaId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          areaId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *区id
       * </pre>
       *
       * <code>string AreaId = 4;</code>
       */
      public Builder setAreaId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        areaId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区id
       * </pre>
       *
       * <code>string AreaId = 4;</code>
       */
      public Builder clearAreaId() {

        areaId_ = getDefaultInstance().getAreaId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区id
       * </pre>
       *
       * <code>string AreaId = 4;</code>
       */
      public Builder setAreaIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        areaId_ = value;
        onChanged();
        return this;
      }

      private Object appVersion_ = "";
      /**
       * <pre>
       *包版本号
       * </pre>
       *
       * <code>string AppVersion = 5;</code>
       */
      public String getAppVersion() {
        Object ref = appVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *包版本号
       * </pre>
       *
       * <code>string AppVersion = 5;</code>
       */
      public com.google.protobuf.ByteString
          getAppVersionBytes() {
        Object ref = appVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *包版本号
       * </pre>
       *
       * <code>string AppVersion = 5;</code>
       */
      public Builder setAppVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        appVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *包版本号
       * </pre>
       *
       * <code>string AppVersion = 5;</code>
       */
      public Builder clearAppVersion() {

        appVersion_ = getDefaultInstance().getAppVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *包版本号
       * </pre>
       *
       * <code>string AppVersion = 5;</code>
       */
      public Builder setAppVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        appVersion_ = value;
        onChanged();
        return this;
      }

      private Object resourceVersion_ = "";
      /**
       * <pre>
       *资源版本号
       * </pre>
       *
       * <code>string ResourceVersion = 6;</code>
       */
      public String getResourceVersion() {
        Object ref = resourceVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          resourceVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *资源版本号
       * </pre>
       *
       * <code>string ResourceVersion = 6;</code>
       */
      public com.google.protobuf.ByteString
          getResourceVersionBytes() {
        Object ref = resourceVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          resourceVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *资源版本号
       * </pre>
       *
       * <code>string ResourceVersion = 6;</code>
       */
      public Builder setResourceVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        resourceVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *资源版本号
       * </pre>
       *
       * <code>string ResourceVersion = 6;</code>
       */
      public Builder clearResourceVersion() {

        resourceVersion_ = getDefaultInstance().getResourceVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *资源版本号
       * </pre>
       *
       * <code>string ResourceVersion = 6;</code>
       */
      public Builder setResourceVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        resourceVersion_ = value;
        onChanged();
        return this;
      }

      private Object projectId_ = "";
      /**
       * <pre>
       *项目编码
       * </pre>
       *
       * <code>string ProjectId = 7;</code>
       */
      public String getProjectId() {
        Object ref = projectId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          projectId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *项目编码
       * </pre>
       *
       * <code>string ProjectId = 7;</code>
       */
      public com.google.protobuf.ByteString
          getProjectIdBytes() {
        Object ref = projectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          projectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *项目编码
       * </pre>
       *
       * <code>string ProjectId = 7;</code>
       */
      public Builder setProjectId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        projectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *项目编码
       * </pre>
       *
       * <code>string ProjectId = 7;</code>
       */
      public Builder clearProjectId() {

        projectId_ = getDefaultInstance().getProjectId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *项目编码
       * </pre>
       *
       * <code>string ProjectId = 7;</code>
       */
      public Builder setProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        projectId_ = value;
        onChanged();
        return this;
      }

      private int runningId_ ;
      /**
       * <pre>
       *每次运行的唯一id
       * </pre>
       *
       * <code>int32 RunningId = 8;</code>
       */
      public int getRunningId() {
        return runningId_;
      }
      /**
       * <pre>
       *每次运行的唯一id
       * </pre>
       *
       * <code>int32 RunningId = 8;</code>
       */
      public Builder setRunningId(int value) {

        runningId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *每次运行的唯一id
       * </pre>
       *
       * <code>int32 RunningId = 8;</code>
       */
      public Builder clearRunningId() {

        runningId_ = 0;
        onChanged();
        return this;
      }

      private Object formatVersion_ = "";
      /**
       * <pre>
       *数据格式版本号
       * </pre>
       *
       * <code>string FormatVersion = 9;</code>
       */
      public String getFormatVersion() {
        Object ref = formatVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          formatVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *数据格式版本号
       * </pre>
       *
       * <code>string FormatVersion = 9;</code>
       */
      public com.google.protobuf.ByteString
          getFormatVersionBytes() {
        Object ref = formatVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          formatVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *数据格式版本号
       * </pre>
       *
       * <code>string FormatVersion = 9;</code>
       */
      public Builder setFormatVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        formatVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据格式版本号
       * </pre>
       *
       * <code>string FormatVersion = 9;</code>
       */
      public Builder clearFormatVersion() {

        formatVersion_ = getDefaultInstance().getFormatVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据格式版本号
       * </pre>
       *
       * <code>string FormatVersion = 9;</code>
       */
      public Builder setFormatVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        formatVersion_ = value;
        onChanged();
        return this;
      }

      private long timeStamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>int64 TimeStamp = 10;</code>
       */
      public long getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>int64 TimeStamp = 10;</code>
       */
      public Builder setTimeStamp(long value) {

        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>int64 TimeStamp = 10;</code>
       */
      public Builder clearTimeStamp() {

        timeStamp_ = 0L;
        onChanged();
        return this;
      }

      private Object dungeonId_ = "";
      /**
       * <pre>
       *战斗id
       * </pre>
       *
       * <code>string DungeonId = 11;</code>
       */
      public String getDungeonId() {
        Object ref = dungeonId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dungeonId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *战斗id
       * </pre>
       *
       * <code>string DungeonId = 11;</code>
       */
      public com.google.protobuf.ByteString
          getDungeonIdBytes() {
        Object ref = dungeonId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dungeonId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *战斗id
       * </pre>
       *
       * <code>string DungeonId = 11;</code>
       */
      public Builder setDungeonId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        dungeonId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗id
       * </pre>
       *
       * <code>string DungeonId = 11;</code>
       */
      public Builder clearDungeonId() {

        dungeonId_ = getDefaultInstance().getDungeonId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗id
       * </pre>
       *
       * <code>string DungeonId = 11;</code>
       */
      public Builder setDungeonIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        dungeonId_ = value;
        onChanged();
        return this;
      }

      private int logHeroId_ ;
      /**
       * <pre>
       *上报人的英雄id
       * </pre>
       *
       * <code>int32 LogHeroId = 12;</code>
       */
      public int getLogHeroId() {
        return logHeroId_;
      }
      /**
       * <pre>
       *上报人的英雄id
       * </pre>
       *
       * <code>int32 LogHeroId = 12;</code>
       */
      public Builder setLogHeroId(int value) {

        logHeroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报人的英雄id
       * </pre>
       *
       * <code>int32 LogHeroId = 12;</code>
       */
      public Builder clearLogHeroId() {

        logHeroId_ = 0;
        onChanged();
        return this;
      }

      private boolean logHeroRace_ ;
      /**
       * <pre>
       *上报人的阵营
       * </pre>
       *
       * <code>bool LogHeroRace = 13;</code>
       */
      public boolean getLogHeroRace() {
        return logHeroRace_;
      }
      /**
       * <pre>
       *上报人的阵营
       * </pre>
       *
       * <code>bool LogHeroRace = 13;</code>
       */
      public Builder setLogHeroRace(boolean value) {

        logHeroRace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上报人的阵营
       * </pre>
       *
       * <code>bool LogHeroRace = 13;</code>
       */
      public Builder clearLogHeroRace() {

        logHeroRace_ = false;
        onChanged();
        return this;
      }

      private java.util.List<BattleLogBaseInfo> infos_ =
        java.util.Collections.emptyList();
      private void ensureInfosIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          infos_ = new java.util.ArrayList<BattleLogBaseInfo>(infos_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          BattleLogInfoDTO.BattleLogBaseInfo, BattleLogInfoDTO.BattleLogBaseInfo.Builder, BattleLogInfoDTO.BattleLogBaseInfoOrBuilder> infosBuilder_;

      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public java.util.List<BattleLogBaseInfo> getInfosList() {
        if (infosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(infos_);
        } else {
          return infosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public int getInfosCount() {
        if (infosBuilder_ == null) {
          return infos_.size();
        } else {
          return infosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public BattleLogInfoDTO.BattleLogBaseInfo getInfos(int index) {
        if (infosBuilder_ == null) {
          return infos_.get(index);
        } else {
          return infosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder setInfos(
          int index, BattleLogInfoDTO.BattleLogBaseInfo value) {
        if (infosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfosIsMutable();
          infos_.set(index, value);
          onChanged();
        } else {
          infosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder setInfos(
          int index, BattleLogInfoDTO.BattleLogBaseInfo.Builder builderForValue) {
        if (infosBuilder_ == null) {
          ensureInfosIsMutable();
          infos_.set(index, builderForValue.build());
          onChanged();
        } else {
          infosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder addInfos(BattleLogInfoDTO.BattleLogBaseInfo value) {
        if (infosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfosIsMutable();
          infos_.add(value);
          onChanged();
        } else {
          infosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder addInfos(
          int index, BattleLogInfoDTO.BattleLogBaseInfo value) {
        if (infosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfosIsMutable();
          infos_.add(index, value);
          onChanged();
        } else {
          infosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder addInfos(
          BattleLogInfoDTO.BattleLogBaseInfo.Builder builderForValue) {
        if (infosBuilder_ == null) {
          ensureInfosIsMutable();
          infos_.add(builderForValue.build());
          onChanged();
        } else {
          infosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder addInfos(
          int index, BattleLogInfoDTO.BattleLogBaseInfo.Builder builderForValue) {
        if (infosBuilder_ == null) {
          ensureInfosIsMutable();
          infos_.add(index, builderForValue.build());
          onChanged();
        } else {
          infosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder addAllInfos(
          Iterable<? extends BattleLogBaseInfo> values) {
        if (infosBuilder_ == null) {
          ensureInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, infos_);
          onChanged();
        } else {
          infosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder clearInfos() {
        if (infosBuilder_ == null) {
          infos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          infosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public Builder removeInfos(int index) {
        if (infosBuilder_ == null) {
          ensureInfosIsMutable();
          infos_.remove(index);
          onChanged();
        } else {
          infosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public BattleLogInfoDTO.BattleLogBaseInfo.Builder getInfosBuilder(
          int index) {
        return getInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public BattleLogInfoDTO.BattleLogBaseInfoOrBuilder getInfosOrBuilder(
          int index) {
        if (infosBuilder_ == null) {
          return infos_.get(index);  } else {
          return infosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public java.util.List<? extends BattleLogBaseInfoOrBuilder>
           getInfosOrBuilderList() {
        if (infosBuilder_ != null) {
          return infosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(infos_);
        }
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public BattleLogInfoDTO.BattleLogBaseInfo.Builder addInfosBuilder() {
        return getInfosFieldBuilder().addBuilder(
            BattleLogInfoDTO.BattleLogBaseInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public BattleLogInfoDTO.BattleLogBaseInfo.Builder addInfosBuilder(
          int index) {
        return getInfosFieldBuilder().addBuilder(
            index, BattleLogInfoDTO.BattleLogBaseInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *上报的log数组
       * </pre>
       *
       * <code>repeated .BattleLogBaseInfo infos = 14;</code>
       */
      public java.util.List<BattleLogBaseInfo.Builder>
           getInfosBuilderList() {
        return getInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          BattleLogInfoDTO.BattleLogBaseInfo, BattleLogInfoDTO.BattleLogBaseInfo.Builder, BattleLogInfoDTO.BattleLogBaseInfoOrBuilder>
          getInfosFieldBuilder() {
        if (infosBuilder_ == null) {
          infosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              BattleLogInfoDTO.BattleLogBaseInfo, BattleLogInfoDTO.BattleLogBaseInfo.Builder, BattleLogInfoDTO.BattleLogBaseInfoOrBuilder>(
                  infos_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          infos_ = null;
        }
        return infosBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BattleLogInfoList)
    }

    // @@protoc_insertion_point(class_scope:BattleLogInfoList)
    private static final BattleLogInfoDTO.BattleLogInfoList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BattleLogInfoDTO.BattleLogInfoList();
    }

    public static BattleLogInfoDTO.BattleLogInfoList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BattleLogInfoList>
        PARSER = new com.google.protobuf.AbstractParser<BattleLogInfoList>() {
      public BattleLogInfoList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BattleLogInfoList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BattleLogInfoList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BattleLogInfoList> getParserForType() {
      return PARSER;
    }

    public BattleLogInfoDTO.BattleLogInfoList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BattleLogBaseInfo_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BattleLogBaseInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BattleLogGetItemInfo_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BattleLogGetItemInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BattleLogAttrChangeInfo_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BattleLogAttrChangeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BattleLogInfoList_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BattleLogInfoList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n3src/main/java/com/protobuf/proto/Battl" +
      "eLogMsg.proto\032\031google/protobuf/any.proto" +
      "\"\255\001\n\021BattleLogBaseInfo\022\034\n\004type\030\001 \001(\0162\016.B" +
      "attleLogType\022\r\n\005LogId\030\002 \001(\005\022\020\n\010TypeCode\030" +
      "\003 \001(\005\022\017\n\007FrameId\030\004 \001(\005\022\017\n\007OwnerId\030\005 \001(\005\022" +
      "\021\n\tOwnerRace\030\006 \001(\010\022$\n\006object\030\007 \001(\0132\024.goo" +
      "gle.protobuf.Any\"K\n\024BattleLogGetItemInfo" +
      "\022\016\n\006DeadId\030\001 \001(\005\022\020\n\010DeadRace\030\002 \001(\010\022\021\n\tIt" +
      "emValue\030\003 \001(\005\"\304\003\n\027BattleLogAttrChangeInf" +
      "o\022\017\n\007PartsId\030\001 \003(\005\022\022\n\nPartsLevel\030\002 \003(\005\022\r" +
      "\n\005GodId\030\003 \001(\005\022\022\n\nAdvancesId\030\004 \003(\005\022\023\n\013Ski" +
      "llsLevel\030\005 \003(\005\022\r\n\005Level\030\006 \001(\005\022\026\n\016Critica" +
      "lStrike\030\007 \001(\002\022\031\n\021CriticalStrikeEff\030\010 \001(\002" +
      "\022\r\n\005HpMax\030\t \001(\005\022\017\n\007RegenHp\030\n \001(\005\022\021\n\tPhyA" +
      "ttack\030\013 \001(\005\022\016\n\006PhyDef\030\014 \001(\005\022\023\n\013AttackSpe" +
      "ed\030\r \001(\002\022\021\n\tMoveSpeed\030\016 \001(\005\022\022\n\nPhyStealH" +
      "p\030\017 \001(\002\022\020\n\010CdAddrat\030\020 \001(\002\022\024\n\014PhyPenetrat" +
      "e\030\021 \001(\005\022\023\n\013TenacityRat\030\022 \001(\002\022\017\n\007KickPow\030" +
      "\023 \001(\005\022\024\n\014PhyAttackCoe\030\024 \001(\002\022\024\n\014MoveSpeed" +
      "Coe\030\025 \001(\002\022\021\n\tPhyDefCoe\030\026 \001(\002\"\267\002\n\021BattleL" +
      "ogInfoList\022\020\n\010Platform\030\001 \001(\t\022\020\n\010PlayerId" +
      "\030\002 \001(\t\022\023\n\013AccountName\030\003 \001(\t\022\016\n\006AreaId\030\004 " +
      "\001(\t\022\022\n\nAppVersion\030\005 \001(\t\022\027\n\017ResourceVersi" +
      "on\030\006 \001(\t\022\021\n\tProjectId\030\007 \001(\t\022\021\n\tRunningId" +
      "\030\010 \001(\005\022\025\n\rFormatVersion\030\t \001(\t\022\021\n\tTimeSta" +
      "mp\030\n \001(\003\022\021\n\tDungeonId\030\013 \001(\t\022\021\n\tLogHeroId" +
      "\030\014 \001(\005\022\023\n\013LogHeroRace\030\r \001(\010\022!\n\005infos\030\016 \003" +
      "(\0132\022.BattleLogBaseInfo*6\n\rBattleLogType\022" +
      "\010\n\004None\020\000\022\013\n\007GetItem\020\001\022\016\n\nAttrChange\020\002B\022" +
      "B\020BattleLogInfoDTOb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_BattleLogBaseInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BattleLogBaseInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BattleLogBaseInfo_descriptor,
        new String[] { "Type", "LogId", "TypeCode", "FrameId", "OwnerId", "OwnerRace", "Object", });
    internal_static_BattleLogGetItemInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_BattleLogGetItemInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BattleLogGetItemInfo_descriptor,
        new String[] { "DeadId", "DeadRace", "ItemValue", });
    internal_static_BattleLogAttrChangeInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_BattleLogAttrChangeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BattleLogAttrChangeInfo_descriptor,
        new String[] { "PartsId", "PartsLevel", "GodId", "AdvancesId", "SkillsLevel", "Level", "CriticalStrike", "CriticalStrikeEff", "HpMax", "RegenHp", "PhyAttack", "PhyDef", "AttackSpeed", "MoveSpeed", "PhyStealHp", "CdAddrat", "PhyPenetrate", "TenacityRat", "KickPow", "PhyAttackCoe", "MoveSpeedCoe", "PhyDefCoe", });
    internal_static_BattleLogInfoList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_BattleLogInfoList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BattleLogInfoList_descriptor,
        new String[] { "Platform", "PlayerId", "AccountName", "AreaId", "AppVersion", "ResourceVersion", "ProjectId", "RunningId", "FormatVersion", "TimeStamp", "DungeonId", "LogHeroId", "LogHeroRace", "Infos", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
